{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useParams,NavLink,Route,Switch}from'react-router-dom';import{Container}from\"react-bootstrap\";import axios from\"axios\";import UserIcon from'../Assets/Icons/UserProfileIcon.png';import'./profile.css';import'./home.css';import{ColorExtractor}from'react-color-extractor';import chroma from'chroma-js';import CustomCardResult from\"./CustomCardResult.jsx\";import CustomTracklist from\"./CustomTracklist.jsx\";import Genres from\"./genres.json\";import Loading from\"./loading.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CLIENT_ID=\"5d8c84c59ac8435e91aa1c9d5d2e9706\";const CLIENT_SECRET=\"93799cce40b641bb951a9b6966e3f2c0\";function UserPage(){const{userId}=useParams();// Get the artistId from the URL\nconst[userResults,setUserResults]=useState([]);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);const[extractedColors,setExtractedColors]=useState([]);const[userAuth,setUserAuth]=useState(false);const[gradientString,setGradientString]=useState('');const[bodyGradient,setBodyGradient]=useState('');const[activeTab,setActiveTab]=useState('Overview');const[activeStatTab,setActiveStatTab]=useState('all-time');const[topArtistsMonth,setTopArtistsMonth]=useState([]);const[topArtistsTotal,setTopArtistsTotal]=useState([]);const[topTracksMonth,setTopTracksMonth]=useState([]);const[topTracksTotal,setTopTracksTotal]=useState([]);const[topPlaylists,setTopPlaylists]=useState([]);const[listenHistory,setListenHistory]=useState([]);// Example function to refresh the access token using the refresh token\nasync function refreshAccessToken(refreshToken){const clientId=CLIENT_ID;const clientSecret=CLIENT_SECRET;const base64Encoded=btoa(\"\".concat(clientId,\":\").concat(clientSecret)).toString('base64');const url='https://accounts.spotify.com/api/token';const body=new URLSearchParams();body.append('grant_type','refresh_token');body.append('refresh_token',refreshToken);try{const response=await fetch(url,{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded','Authorization':\"Basic \".concat(base64Encoded)},body:body});if(response.ok){const data=await response.json();const newAccessToken=data.access_token;// Use the new access token for Spotify API requests\nreturn newAccessToken;}else{// Handle error when refreshing token\nconsole.error('Error refreshing access token:',response.statusText);return null;}}catch(error){console.error('Error refreshing access token:',error);return null;}}const handleSpotifyLogin=()=>{console.log('handleSpotifyLogin function called.');const authEndpoint='https://accounts.spotify.com/authorize';const clientId='5d8c84c59ac8435e91aa1c9d5d2e9706';const redirectUri='http://localhost:3000/';const scopes=['user-top-read','user-follow-read','user-read-recently-played','streaming'];const authUrl=\"\".concat(authEndpoint,\"?client_id=\").concat(clientId,\"&redirect_uri=\").concat(encodeURIComponent(redirectUri),\"&scope=\").concat(encodeURIComponent(scopes.join(' ')),\"&response_type=code&show_dialog=true&access_type=offline\");window.location.href=authUrl;};// Function to handle tab click and set the active tab\nconst handleTabClick=tabName=>{setActiveTab(tabName);};const handleStatClick=tabName=>{setActiveStatTab(tabName);};const handleGetColors=colors=>{// Store the extracted colors in state\nsetExtractedColors(colors[2]);const startColor=colors[2];const darkerColor=darkenColor(startColor,0.5);// Darken the color \nconst gradient=\"linear-gradient(to bottom, \".concat(startColor,\", \").concat(darkerColor,\")\");setGradientString(gradient);const bodyDark=darkenColor(startColor,0.6);const bodyGradient=\"linear-gradient(to bottom, \".concat(bodyDark,\" , #201d24,#201d24, #201d24 )\");setBodyGradient(bodyGradient);};const darkenColor=(color,amount)=>{// Remove the \"#\" symbol from the color string and split it into RGB components\nconst[r,g,b]=color.substring(1).match(/.{2}/g).map(value=>parseInt(value,16));// Calculate a darker shade by reducing RGB values\nconst darkerR=Math.round(r*(1-amount));const darkerG=Math.round(g*(1-amount));const darkerB=Math.round(b*(1-amount));// Construct a new color string in hexadecimal format\nreturn\"#\".concat(darkerR.toString(16).padStart(2,'0')).concat(darkerG.toString(16).padStart(2,'0')).concat(darkerB.toString(16).padStart(2,'0'));};useEffect(()=>{async function fetchData(){// Fetch access token once during component initialization\nsetLoading(true);performSearch();}fetchData();},[userId]);async function performSearch(){const userResults=await axios.post(\"http://localhost:3000/user\",{id:userId}).then(response=>response.data).catch(e=>{console.log(e);return{};});if(userResults){setUserResults(userResults);}else{setUserResults([]);}const userAuth=await axios.post(\"http://localhost:3000/user-authenticate\",{id:userId}).then(response=>response.data).catch(e=>{console.log(e);return false;});const userToken=await axios.post(\"http://localhost:3000/user-token\",{id:userId}).then(response=>response.data).catch(e=>{console.log(e);return false;});console.log(userAuth);setUserAuth(userAuth);// Example usage:\nconst refreshedAccessToken=await refreshAccessToken(userToken);setToken(refreshedAccessToken);const getTopStats=async(type,timeRange)=>{try{const token=refreshedAccessToken;// Replace with your access token\nconst response=await fetch(\"https://api.spotify.com/v1/me/top/\".concat(type,\"?time_range=\").concat(timeRange),{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)// Use the access token obtained earlier\n}});if(response.ok){const data=await response.json();console.log(data);// Log the response data\n// Process the response data as needed or set it in state\n}else{console.log('error getting top artists');}}catch(e){console.log(e);// Handle errors appropriately\n}};const getUserSpotifyData=async endpoint=>{try{const token=refreshedAccessToken;// Replace with your access token\nconst response=await fetch(endpoint,{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)// Use the access token obtained earlier\n}});if(response.ok){const data=await response.json();console.log(data);// Log the response data\n// Process the response data as needed or set it in state\n}else{console.log('error getting top artists');}}catch(e){console.log(e);// Handle errors appropriately\n}};setTopArtistsMonth(await getTopStats(\"artists\",\"short_term\"));setTopTracksMonth(await getTopStats(\"tracks\",\"short_term\"));setTopArtistsTotal(await getTopStats(\"artists\",\"short_term\"));setTopTracksTotal(await getTopStats(\"tracks\",\"short_term\"));setTopPlaylists(await getUserSpotifyData(\"https://api.spotify.com/v1/me/playlists\"));setListenHistory(await getUserSpotifyData(\"https://api.spotify.com/v1/me/player/recently-played\"));console.log(listenHistory.items);console.log(topPlaylists.items);setLoading(false);// Set loading to false when data is loaded\n}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-body\",children:loading?/*#__PURE__*/_jsx(Loading,{}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ColorExtractor,{src:UserIcon,getColors:handleGetColors}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-head\",style:{background:gradientString},children:[/*#__PURE__*/_jsx(\"div\",{className:\"column-left\",children:/*#__PURE__*/_jsx(\"div\",{className:\"artist-image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:UserIcon,className:\"artist-image profile-image mb-3\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"column-right\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-name\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"profile-caption\",children:userResults.username})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h1\",{className:\"caption  type-caption \",children:[\" @\",userResults.accountname,\" \"]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"genre-list\",children:/*#__PURE__*/_jsx(\"a\",{className:\"artist-link\",children:\"User\"})})})}),userAuth===true&&!token&&/*#__PURE__*/_jsx(\"button\",{id:\"loginButton\",onClick:handleSpotifyLogin,children:\"Authorize Spotify\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-body\",style:{background:bodyGradient},children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-body-expand\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-songs top-tabs pb-3 pt-3\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"top-tab caption profile-subcaption pb-3 \".concat(activeTab==='Overview'?'active-profile':''),onClick:()=>handleTabClick('Overview'),children:\"Overview\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"top-tab caption profile-subcaption pb-3 \".concat(activeTab==='Review'?'active-profile':''),onClick:()=>handleTabClick('Review'),children:\"Reviews\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"top-tab caption profile-subcaption pb-3 \".concat(activeTab==='Stats'?'active-profile':''),onClick:()=>handleTabClick('Stats'),children:\"Stats\"})]}),activeTab==='Overview'&&/*#__PURE__*/ // Content related to Overview tab\n_jsxs(\"div\",{className:\"content-overview\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"caption profile-altsubcaption pb-3 pt-3\",children:\"Listening activity\"})}),/*#__PURE__*/_jsx(CustomTracklist,{items:listenHistory.items}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"caption profile-altsubcaption pb-3 pt-3\",children:\"User playlists\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:topPlaylists.items,subtitleType:\"playlist\"})]}),activeTab==='Review'&&/*#__PURE__*/ // Content related to Overview tab\n_jsx(\"div\",{className:\"content-overview\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"caption profile-altsubcaption pb-3 pt-3\",children:\"User reviews unavailable.\"})}),activeTab==='Stats'&&/*#__PURE__*/ // Content related to Stats tab\n_jsxs(\"div\",{className:\"content-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-songs top-tabs pb-3 pt-3\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"top-tab caption profile-subcaption pb-3 \".concat(activeStatTab==='all-time'?'active-profile':''),onClick:()=>handleStatClick('all-time'),children:\"All time\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"top-tab caption profile-subcaption pb-3 \".concat(activeStatTab==='past-month'?'active-profile':''),onClick:()=>handleStatClick('past-month'),children:\"Past month\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"caption profile-altsubcaption pb-3 pt-3\",children:\"Top artists\"})}),activeStatTab==='all-time'&&/*#__PURE__*/ // Content related to Overview tab\n_jsx(CustomCardResult,{items:topArtistsTotal.items,subtitleType:\"artist\"}),activeStatTab==='past-month'&&/*#__PURE__*/ // Content related to Overview tab\n_jsx(CustomCardResult,{items:topArtistsMonth.items,subtitleType:\"artist\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"caption profile-altsubcaption pb-3 pt-3\",children:\"Top tracks\"})}),activeStatTab==='all-time'&&/*#__PURE__*/ // Content related to Overview tab\n_jsx(CustomCardResult,{items:topArtistsTotal.items,subtitleType:\"track\"}),activeStatTab==='past-month'&&/*#__PURE__*/ // Content related to Overview tab\n_jsx(CustomCardResult,{items:topArtistsMonth.items,subtitleType:\"track\"})]})]})})]})})});}export default UserPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","NavLink","Route","Switch","Container","axios","UserIcon","ColorExtractor","chroma","CustomCardResult","CustomTracklist","Genres","Loading","jsx","_jsx","jsxs","_jsxs","CLIENT_ID","CLIENT_SECRET","UserPage","userId","userResults","setUserResults","token","setToken","loading","setLoading","extractedColors","setExtractedColors","userAuth","setUserAuth","gradientString","setGradientString","bodyGradient","setBodyGradient","activeTab","setActiveTab","activeStatTab","setActiveStatTab","topArtistsMonth","setTopArtistsMonth","topArtistsTotal","setTopArtistsTotal","topTracksMonth","setTopTracksMonth","topTracksTotal","setTopTracksTotal","topPlaylists","setTopPlaylists","listenHistory","setListenHistory","refreshAccessToken","refreshToken","clientId","clientSecret","base64Encoded","btoa","concat","toString","url","body","URLSearchParams","append","response","fetch","method","headers","ok","data","json","newAccessToken","access_token","console","error","statusText","handleSpotifyLogin","log","authEndpoint","redirectUri","scopes","authUrl","encodeURIComponent","join","window","location","href","handleTabClick","tabName","handleStatClick","handleGetColors","colors","startColor","darkerColor","darkenColor","gradient","bodyDark","color","amount","r","g","b","substring","match","map","value","parseInt","darkerR","Math","round","darkerG","darkerB","padStart","fetchData","performSearch","post","id","then","catch","e","userToken","refreshedAccessToken","getTopStats","type","timeRange","getUserSpotifyData","endpoint","items","children","className","src","getColors","style","background","username","accountname","onClick","subtitleType"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/home-page/user-page.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, NavLink, Route, Switch } from 'react-router-dom';\r\nimport { Container } from \"react-bootstrap\";\r\nimport axios from \"axios\"\r\nimport UserIcon from '../Assets/Icons/UserProfileIcon.png';\r\nimport './profile.css'\r\nimport './home.css'\r\nimport { ColorExtractor  } from 'react-color-extractor';\r\nimport chroma from 'chroma-js';\r\nimport CustomCardResult from \"./CustomCardResult.jsx\";\r\nimport CustomTracklist from \"./CustomTracklist.jsx\"\r\nimport Genres from \"./genres.json\";\r\nimport Loading from \"./loading.jsx\"\r\n\r\n\r\n\r\n\r\nconst CLIENT_ID = \"5d8c84c59ac8435e91aa1c9d5d2e9706\";\r\nconst CLIENT_SECRET = \"93799cce40b641bb951a9b6966e3f2c0\";\r\n\r\nfunction UserPage() {\r\n\r\n   \r\n    const { userId } = useParams(); // Get the artistId from the URL\r\n    const [userResults, setUserResults] = useState([]);\r\n\r\n    const [token, setToken] = useState(null)\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [extractedColors, setExtractedColors] = useState([]);\r\n    const [userAuth, setUserAuth] = useState(false)\r\n    const [gradientString, setGradientString] = useState('');\r\n    const [bodyGradient, setBodyGradient] = useState('');\r\n    const [activeTab, setActiveTab] = useState('Overview');\r\n    const [activeStatTab, setActiveStatTab] = useState('all-time')\r\n\r\n    const [topArtistsMonth, setTopArtistsMonth] = useState([]);\r\n    const [topArtistsTotal, setTopArtistsTotal] = useState([]);\r\n    const [topTracksMonth, setTopTracksMonth] = useState([]);\r\n    const [topTracksTotal, setTopTracksTotal] = useState([]);\r\n    const [topPlaylists, setTopPlaylists] = useState([])\r\n    const [listenHistory, setListenHistory] = useState([]);\r\n\r\n    // Example function to refresh the access token using the refresh token\r\n    async function refreshAccessToken(refreshToken) {\r\n        const clientId = CLIENT_ID;\r\n        const clientSecret = CLIENT_SECRET;\r\n        const base64Encoded = btoa(`${clientId}:${clientSecret}`).toString('base64');\r\n    \r\n        const url = 'https://accounts.spotify.com/api/token';\r\n        const body = new URLSearchParams();\r\n        body.append('grant_type', 'refresh_token');\r\n        body.append('refresh_token', refreshToken);\r\n    \r\n        try {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': `Basic ${base64Encoded}`\r\n            },\r\n            body: body\r\n        });\r\n    \r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            const newAccessToken = data.access_token;\r\n            // Use the new access token for Spotify API requests\r\n            return newAccessToken;\r\n        } else {\r\n            // Handle error when refreshing token\r\n            console.error('Error refreshing access token:', response.statusText);\r\n            return null;\r\n        }\r\n        } catch (error) {\r\n        console.error('Error refreshing access token:', error);\r\n        return null;\r\n        }\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n\r\n    const handleSpotifyLogin = () => {\r\n        console.log('handleSpotifyLogin function called.');\r\n        const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n        const clientId = '5d8c84c59ac8435e91aa1c9d5d2e9706';\r\n        const redirectUri = 'http://localhost:3000/';\r\n        const scopes = [ 'user-top-read', 'user-follow-read', 'user-read-recently-played', 'streaming' ];\r\n    \r\n      \r\n       \r\n        const authUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes.join(' '))}&response_type=code&show_dialog=true&access_type=offline`;\r\n        window.location.href = authUrl;\r\n       \r\n    };\r\n\r\n    // Function to handle tab click and set the active tab\r\n    const handleTabClick = (tabName) => {\r\n        setActiveTab(tabName);\r\n    };\r\n\r\n    const handleStatClick = (tabName) => {\r\n        setActiveStatTab(tabName);\r\n    }\r\n\r\n    const handleGetColors = (colors) => {\r\n        // Store the extracted colors in state\r\n        setExtractedColors(colors[2]);\r\n        const startColor = colors[2];\r\n        const darkerColor = darkenColor(startColor, 0.5); // Darken the color \r\n        const gradient = `linear-gradient(to bottom, ${startColor}, ${darkerColor})`;\r\n        setGradientString(gradient);\r\n        const bodyDark = darkenColor(startColor, 0.6);\r\n        const bodyGradient = `linear-gradient(to bottom, ${bodyDark} , #201d24,#201d24, #201d24 )`\r\n        setBodyGradient(bodyGradient)\r\n    };\r\n\r\n    const darkenColor = (color, amount) => {\r\n        // Remove the \"#\" symbol from the color string and split it into RGB components\r\n        const [r, g, b] = color.substring(1).match(/.{2}/g).map((value) => parseInt(value, 16));\r\n    \r\n        // Calculate a darker shade by reducing RGB values\r\n        const darkerR = Math.round(r * (1 - amount));\r\n        const darkerG = Math.round(g * (1 - amount));\r\n        const darkerB = Math.round(b * (1 - amount));\r\n    \r\n        // Construct a new color string in hexadecimal format\r\n        return `#${darkerR.toString(16).padStart(2, '0')}${darkerG.toString(16).padStart(2, '0')}${darkerB.toString(16).padStart(2, '0')}`;\r\n      };\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            // Fetch access token once during component initialization\r\n            setLoading(true);\r\n            \r\n            performSearch()\r\n            \r\n\r\n         \r\n\r\n          \r\n        }\r\n\r\n        fetchData();\r\n    }, [userId]); \r\n\r\n    async function performSearch() {\r\n\r\n        const userResults = await axios.post(\"http://localhost:3000/user\", {id: userId})\r\n            .then(response => response.data)\r\n            .catch(e=> {\r\n                console.log(e);\r\n                return {}\r\n            })\r\n\r\n        if (userResults) {\r\n            setUserResults(userResults);\r\n        } else {\r\n            setUserResults([]);\r\n        }\r\n        const userAuth = await axios.post(\"http://localhost:3000/user-authenticate\", {id: userId})\r\n            .then(response => response.data)\r\n            .catch(e=> {\r\n                console.log(e);\r\n                return false;\r\n        })\r\n\r\n        const userToken = await axios.post(\"http://localhost:3000/user-token\", {id: userId})\r\n            .then(response => response.data)\r\n            .catch(e=> {\r\n                console.log(e);\r\n                return false;\r\n        })\r\n\r\n       \r\n        \r\n\r\n        console.log(userAuth);\r\n        setUserAuth(userAuth);\r\n\r\n        // Example usage:\r\n        const refreshedAccessToken = await refreshAccessToken(userToken);\r\n        setToken(refreshedAccessToken);\r\n\r\n        const getTopStats = async (type, timeRange) => {\r\n            try {\r\n                const token = refreshedAccessToken; // Replace with your access token\r\n                const response = await fetch(`https://api.spotify.com/v1/me/top/${type}?time_range=${timeRange}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}` // Use the access token obtained earlier\r\n                    }\r\n                });\r\n    \r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    console.log(data); // Log the response data\r\n                    // Process the response data as needed or set it in state\r\n                } else {\r\n                    console.log('error getting top artists')\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n                // Handle errors appropriately\r\n            }\r\n        };\r\n\r\n\r\n        const getUserSpotifyData = async (endpoint) => {\r\n            try {\r\n                const token = refreshedAccessToken; // Replace with your access token\r\n                const response = await fetch(endpoint, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}` // Use the access token obtained earlier\r\n                    }\r\n                });\r\n    \r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    console.log(data); // Log the response data\r\n                    // Process the response data as needed or set it in state\r\n                } else {\r\n                    console.log('error getting top artists')\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n                // Handle errors appropriately\r\n            }\r\n        };\r\n\r\n        setTopArtistsMonth(await getTopStats(\"artists\", \"short_term\") );\r\n        setTopTracksMonth(await getTopStats(\"tracks\", \"short_term\") );\r\n        setTopArtistsTotal(await getTopStats(\"artists\", \"short_term\") );\r\n        setTopTracksTotal(await getTopStats(\"tracks\", \"short_term\") );\r\n        setTopPlaylists(await getUserSpotifyData(`https://api.spotify.com/v1/me/playlists`));\r\n        setListenHistory(await getUserSpotifyData(`https://api.spotify.com/v1/me/player/recently-played`));\r\n\r\n        console.log(listenHistory.items);\r\n        console.log(topPlaylists.items);\r\n\r\n        setLoading(false); // Set loading to false when data is loaded\r\n\r\n      \r\n\r\n    }\r\n\r\n   \r\n\r\n   \r\n\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-body\">\r\n                {loading ? (\r\n                    <Loading/>\r\n                ) : (\r\n                    <div >\r\n                        <ColorExtractor\r\n                            src={UserIcon}\r\n                            getColors={handleGetColors}\r\n                        />\r\n                        <div className=\"profile-head\" style={{ background: gradientString }}>\r\n                            <div className=\"column-left\">\r\n                                <div className=\"artist-image-container\">\r\n                                    <img src={UserIcon} className=\"artist-image profile-image mb-3\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"column-right\">\r\n                                <div className = \"profile-name\">\r\n                                    <h1 className=\"profile-caption\">{userResults.username}</h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className=\"caption  type-caption \"> @{userResults.accountname} </h1>\r\n                                </div>\r\n\r\n                                <div>\r\n                                  \r\n                                    <div>\r\n                                        \r\n                                        <div className=\"genre-list\">\r\n                                     \r\n                                            <a   className=\"artist-link\">\r\n                                                User\r\n                                            </a>\r\n                                      \r\n                                        </div>\r\n                                    </div>\r\n                                   \r\n                                </div>\r\n                                {(userAuth === true && !token) && (\r\n                                    <button id=\"loginButton\" onClick={handleSpotifyLogin}>\r\n                                        Authorize Spotify\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        <div className = \"profile-body\" style ={{background: bodyGradient}}>\r\n                            <div className = \"profile-body-expand\">\r\n\r\n                                <div className = \"top-songs top-tabs pb-3 pt-3\">\r\n                                    <h1 className={`top-tab caption profile-subcaption pb-3 ${activeTab === 'Overview' ? 'active-profile' : ''}`} \r\n                                        onClick={() => handleTabClick('Overview')}>Overview</h1>\r\n                                    <h1 className={`top-tab caption profile-subcaption pb-3 ${activeTab === 'Review' ? 'active-profile' : ''}`} \r\n                                        onClick={() => handleTabClick('Review')}>Reviews</h1>\r\n                                    <h1 className={`top-tab caption profile-subcaption pb-3 ${activeTab === 'Stats' ? 'active-profile' : ''}`} \r\n                                        onClick={() => handleTabClick('Stats')}>Stats</h1>\r\n       \r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                     \r\n\r\n\r\n\r\n                                {activeTab === 'Overview' && (\r\n                                    // Content related to Overview tab\r\n                                    <div className=\"content-overview\">\r\n                                        <div>\r\n                                            <h1 className = \"caption profile-altsubcaption pb-3 pt-3\">Listening activity</h1>\r\n                                        </div>\r\n                                        <CustomTracklist items = {listenHistory.items}/>\r\n                                        <div>\r\n                                            <h1 className = \"caption profile-altsubcaption pb-3 pt-3\">User playlists</h1>\r\n                                        </div>\r\n                                        <CustomCardResult items = {topPlaylists.items} subtitleType={\"playlist\"}/>\r\n\r\n                                    </div>\r\n                                   \r\n                                )}\r\n\r\n                                {activeTab === 'Review' && (\r\n                                    // Content related to Overview tab\r\n                                    <div className=\"content-overview\">\r\n                                        <h1 className = \"caption profile-altsubcaption pb-3 pt-3\">User reviews unavailable.</h1>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {activeTab === 'Stats' && (\r\n                                    // Content related to Stats tab\r\n                                    <div className=\"content-stats\">\r\n\r\n                                        <div className = \"top-songs top-tabs pb-3 pt-3\">\r\n                                            <h1 className={`top-tab caption profile-subcaption pb-3 ${activeStatTab === 'all-time' ? 'active-profile' : ''}`} \r\n                                                onClick={() => handleStatClick('all-time')}>All time</h1>\r\n                                            <h1 className={`top-tab caption profile-subcaption pb-3 ${activeStatTab === 'past-month' ? 'active-profile' : ''}`} \r\n                                                onClick={() => handleStatClick('past-month')}>Past month</h1>\r\n                                            \r\n            \r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <h1 className = \"caption profile-altsubcaption pb-3 pt-3\">Top artists</h1>\r\n                                        </div>\r\n\r\n                                        {activeStatTab === 'all-time' && (\r\n                                            // Content related to Overview tab\r\n                                            <CustomCardResult items = {topArtistsTotal.items} subtitleType={\"artist\"}/>\r\n                                        )}\r\n\r\n                                        {activeStatTab === 'past-month' && (\r\n                                            // Content related to Overview tab\r\n                                            <CustomCardResult items = {topArtistsMonth.items} subtitleType={\"artist\"}/>\r\n                                        )}\r\n\r\n                                        <div>\r\n                                            <h1 className = \"caption profile-altsubcaption pb-3 pt-3\">Top tracks</h1>\r\n                                        </div>\r\n\r\n                                        {activeStatTab === 'all-time' && (\r\n                                            // Content related to Overview tab\r\n                                            <CustomCardResult items = {topArtistsTotal.items} subtitleType={\"track\"}/>\r\n                                        )}\r\n\r\n                                        {activeStatTab === 'past-month' && (\r\n                                            // Content related to Overview tab\r\n                                            <CustomCardResult items = {topArtistsMonth.items} subtitleType={\"track\"}/>\r\n                                        )}\r\n\r\n                                        \r\n\r\n\r\n                                        \r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                       \r\n                    \r\n\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;\r\n\r\n\r\n\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}