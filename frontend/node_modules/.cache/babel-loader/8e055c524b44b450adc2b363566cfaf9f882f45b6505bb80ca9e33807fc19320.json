{"ast":null,"code":"import React from\"react\";import{Row,Card}from\"react-bootstrap\";import{Link}from'react-router-dom';import UserIcon from'../Assets/Icons/UserIcon.png';import UserProfileIcon from'../Assets/Icons/UserProfileIcon.png';import GenreIcon from'../Assets/Icons/GenreIcon.png';// Styles for links\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const linkStyles={textDecoration:'none',// Remove underline\ncolor:'inherit'// Inherit the color from the parent\n};// Component to display a grid of cards with items and their details\nfunction CardResult(_ref){let{items,subtitleType,singleRow=false}=_ref;console.log('ITEMS: ',items);// Rendering individual cards based on item type and details\nreturn/*#__PURE__*/_jsx(Row,{className:\"\".concat(singleRow===true?'':''),children:items.map((item,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 \",children:/*#__PURE__*/_jsx(Link,{to:generateLinkTo(item,subtitleType),style:linkStyles,children:/*#__PURE__*/_jsxs(Card,{className:\" custom-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:getItemImage(item,subtitleType),className:\"p-3 card-image\".concat(subtitleType==='artist'||subtitleType==='user'?' artist-image':'')})}),/*#__PURE__*/_jsxs(Card.Body,{className:\"card-body\",children:[/*#__PURE__*/_jsx(Card.Title,{className:\"card-title\",children:getItemTitle(item)}),/*#__PURE__*/_jsx(Card.Subtitle,{className:\"card-subtitle\",children:getSubtitle(item,subtitleType)})]})]})})},i))});}// Function to generate link based on item type\nfunction generateLinkTo(item,subtitleType){// Logic to determine the link based on the item type\n// Modify or add more conditions as needed\nif(item.type===\"artist\"){return\"/artist/\".concat(item.id);}else if(item.type===\"album\"){return\"/album/\".concat(item.id);}else if(item.type===\"playlist\"){return\"/playlist/\".concat(item.id);}else if(item.type===\"genre\"){return\"/genre/\".concat(item.name);}else if(item.accountname){return\"/user/\".concat(item._id);}else if(subtitleType==='genre'){return\"/genre/\".concat(item);}else if(subtitleType==='song'){return\"/album/\".concat(item.album.id);}// Handle other cases if needed\nreturn\"/\";}// Function to get item image based on the item type\nfunction getItemImage(item,subtitleType){if(subtitleType===\"user\"){return UserProfileIcon;}else if(subtitleType===\"genre\"){return GenreIcon;}else if(subtitleType===\"artist\"||subtitleType===\"album\"||subtitleType===\"album-artist\"||subtitleType===\"playlist\"){var _item$images$,_item$album$images$,_item$album$images$2;return item.images&&item.images.length>0?((_item$images$=item.images[0])===null||_item$images$===void 0?void 0:_item$images$.url)||(item.album&&item.album.images&&item.album.images.length>0?((_item$album$images$=item.album.images[0])===null||_item$album$images$===void 0?void 0:_item$album$images$.url)||UserIcon:UserIcon):item.album&&item.album.images&&item.album.images.length>0?((_item$album$images$2=item.album.images[0])===null||_item$album$images$2===void 0?void 0:_item$album$images$2.url)||UserIcon:UserIcon;}else{var _item$album$images$3;return item.album&&item.album.images&&item.album.images.length>0?((_item$album$images$3=item.album.images[0])===null||_item$album$images$3===void 0?void 0:_item$album$images$3.url)||UserIcon:UserIcon;}}// Function to get item title based on the item type\nfunction getItemTitle(item){return item.name||item.username||item.charAt(0).toUpperCase()+item.slice(1);}// Function to get the subtitle based on the item and its type\nfunction getSubtitle(item,subtitleType){// Logic to determine the subtitle based on the item type\nif(subtitleType===\"artist\"){return item.type.charAt(0).toUpperCase()+item.type.slice(1);}else if(subtitleType===\"album\"){return\"\".concat(new Date(item.release_date).getFullYear(),\" \\u2022 \").concat(item.artists.map(artist=>artist.name).join(\", \"));}else if(subtitleType===\"song\"){return\"\".concat(new Date(item.album.release_date).getFullYear(),\" \\u2022 \").concat(item.artists.map(artist=>artist.name).join(\", \"));}else if(subtitleType===\"user\"){return\"User\";}else if(subtitleType===\"playlist\"){return\"Playlist\";}else if(subtitleType===\"genre\"){return\"Genre & Mood\";}else if(subtitleType===\"album-artist\"){return item.album_type.charAt(0).toUpperCase()+item.album_type.slice(1);}else{return item.type||\"\";}}export default CardResult;","map":{"version":3,"names":["React","Row","Card","Link","UserIcon","UserProfileIcon","GenreIcon","jsx","_jsx","jsxs","_jsxs","linkStyles","textDecoration","color","CardResult","_ref","items","subtitleType","singleRow","console","log","className","concat","children","map","item","i","to","generateLinkTo","style","src","getItemImage","Body","Title","getItemTitle","Subtitle","getSubtitle","type","id","name","accountname","_id","album","_item$images$","_item$album$images$","_item$album$images$2","images","length","url","_item$album$images$3","username","charAt","toUpperCase","slice","Date","release_date","getFullYear","artists","artist","join","album_type"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/general/CustomCardResult.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Row, Card } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'; \r\nimport UserIcon from '../Assets/Icons/UserIcon.png'\r\nimport UserProfileIcon from '../Assets/Icons/UserProfileIcon.png'\r\nimport GenreIcon from '../Assets/Icons/GenreIcon.png'\r\n\r\n// Styles for links\r\nconst linkStyles = {\r\n  textDecoration: 'none', // Remove underline\r\n  color: 'inherit', // Inherit the color from the parent\r\n};\r\n\r\n// Component to display a grid of cards with items and their details\r\nfunction CardResult({ items, subtitleType, singleRow = false }) {\r\n  console.log('ITEMS: ', items);\r\n  \r\n  // Rendering individual cards based on item type and details\r\n  return (\r\n    <Row className={`${singleRow === true ? '' : ''}`}>\r\n      {items.map((item, i) => (\r\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 \" key={i}>\r\n          {/* Link to specific item details */}\r\n          <Link to={generateLinkTo(item, subtitleType)} style={linkStyles}>\r\n            <Card className=\" custom-card\">\r\n              <div className=\"image-container\">\r\n                {/* Determine the image based on the item type */}\r\n                <img\r\n                  src={getItemImage(item, subtitleType)}\r\n                  className={`p-3 card-image${(subtitleType === 'artist' || subtitleType === 'user') ? ' artist-image' : ''}`}\r\n                />\r\n              </div>\r\n              <Card.Body className=\"card-body\">\r\n                {/* Display the title and subtitle of the item */}\r\n                <Card.Title className=\"card-title\">{getItemTitle(item)}</Card.Title>\r\n                <Card.Subtitle className=\"card-subtitle\">\r\n                  {getSubtitle(item, subtitleType)}\r\n                </Card.Subtitle>\r\n              </Card.Body>\r\n            </Card>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\n// Function to generate link based on item type\r\nfunction generateLinkTo(item, subtitleType) {\r\n  // Logic to determine the link based on the item type\r\n  // Modify or add more conditions as needed\r\n  if (item.type === \"artist\") {\r\n    return `/artist/${item.id}`;\r\n  } else if (item.type === \"album\") {\r\n    return `/album/${item.id}`;\r\n  } else if (item.type === \"playlist\") {\r\n    return `/playlist/${item.id}`;\r\n  } else if (item.type === \"genre\") {\r\n    return `/genre/${item.name}`;\r\n  } else if (item.accountname) {\r\n    return `/user/${item._id}`;\r\n  } else if (subtitleType === 'genre') {\r\n    return `/genre/${item}`;\r\n  } else if (subtitleType === 'song') {\r\n    return `/album/${item.album.id}`\r\n  }\r\n  // Handle other cases if needed\r\n  return \"/\";\r\n}\r\n\r\n// Function to get item image based on the item type\r\nfunction getItemImage(item, subtitleType) {\r\n  if (subtitleType === \"user\") {\r\n    return UserProfileIcon;\r\n  } else if (subtitleType === \"genre\") {\r\n    return GenreIcon;\r\n  } else if (subtitleType === \"artist\" || subtitleType === \"album\" || subtitleType === \"album-artist\" || subtitleType === \"playlist\") {\r\n    return (\r\n      item.images && item.images.length > 0\r\n        ? (\r\n            item.images[0]?.url || (\r\n              item.album && item.album.images && item.album.images.length > 0\r\n                ? item.album.images[0]?.url || UserIcon\r\n                : UserIcon\r\n            )\r\n          )\r\n        : (\r\n            item.album && item.album.images && item.album.images.length > 0\r\n              ? item.album.images[0]?.url || UserIcon\r\n              : UserIcon\r\n          )\r\n    );\r\n  } else {\r\n    return item.album && item.album.images && item.album.images.length > 0\r\n      ? item.album.images[0]?.url || UserIcon\r\n      : UserIcon;\r\n  }\r\n}\r\n\r\n// Function to get item title based on the item type\r\nfunction getItemTitle(item) {\r\n  return item.name || item.username || item.charAt(0).toUpperCase() + item.slice(1);\r\n}\r\n\r\n// Function to get the subtitle based on the item and its type\r\nfunction getSubtitle(item, subtitleType) {\r\n  // Logic to determine the subtitle based on the item type\r\n  if (subtitleType === \"artist\") {\r\n    return item.type.charAt(0).toUpperCase() + item.type.slice(1);\r\n  } else if (subtitleType === \"album\") {\r\n    return `${new Date(item.release_date).getFullYear()} • ${item.artists.map((artist) => artist.name).join(\", \")}`;\r\n  } else if (subtitleType === \"song\") {\r\n    return `${new Date(item.album.release_date).getFullYear()} • ${item.artists.map((artist) => artist.name).join(\", \")}`;\r\n  } else if (subtitleType === \"user\") {\r\n    return \"User\";\r\n  } else if (subtitleType === \"playlist\") {\r\n    return \"Playlist\";\r\n  } else if (subtitleType === \"genre\") {\r\n    return \"Genre & Mood\"; \r\n  } else if (subtitleType === \"album-artist\") {\r\n    return item.album_type.charAt(0).toUpperCase() + item.album_type.slice(1);\r\n  } else {\r\n    return item.type || \"\";\r\n  }\r\n}\r\n\r\nexport default CardResult;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}