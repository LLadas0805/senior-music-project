{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const SearchTypeButtons=_ref=>{let{searchType,setSearchType,types}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"search-type-buttons-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"search-type-buttons\",children:types.map(type=>/*#__PURE__*/_jsx(\"button\",{className:\"search-type-button \".concat(searchType===type.value?\"active\":\"\"),onClick:()=>setSearchType(type.value),children:type.label},type.value))})});};export default SearchTypeButtons;","map":{"version":3,"names":["React","jsx","_jsx","SearchTypeButtons","_ref","searchType","setSearchType","types","className","children","map","type","concat","value","onClick","label"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/search-page/search-filter.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nconst SearchTypeButtons = ({ searchType, setSearchType, types }) => {\r\n  \r\n  return (\r\n    <div className=\"search-type-buttons-container\">\r\n      <div className=\"search-type-buttons\">\r\n        {types.map((type) => (\r\n          <button\r\n            key={type.value}\r\n            className={`search-type-button ${searchType === type.value ? \"active\" : \"\"}`}\r\n            onClick={() => setSearchType(type.value)}\r\n          >\r\n            {type.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchTypeButtons;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAM1B,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAA0C,IAAzC,CAAEC,UAAU,CAAEC,aAAa,CAAEC,KAAM,CAAC,CAAAH,IAAA,CAE7D,mBACEF,IAAA,QAAKM,SAAS,CAAC,+BAA+B,CAAAC,QAAA,cAC5CP,IAAA,QAAKM,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CACjCF,KAAK,CAACG,GAAG,CAAEC,IAAI,eACdT,IAAA,WAEEM,SAAS,uBAAAI,MAAA,CAAwBP,UAAU,GAAKM,IAAI,CAACE,KAAK,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC7EC,OAAO,CAAEA,CAAA,GAAMR,aAAa,CAACK,IAAI,CAACE,KAAK,CAAE,CAAAJ,QAAA,CAExCE,IAAI,CAACI,KAAK,EAJNJ,IAAI,CAACE,KAKJ,CACT,CAAC,CACC,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}