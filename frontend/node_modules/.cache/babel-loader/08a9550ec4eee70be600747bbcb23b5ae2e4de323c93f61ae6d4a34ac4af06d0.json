{"ast":null,"code":"import React from\"react\";import{Row,Col}from\"react-bootstrap\";import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function formatDuration(ms){const minutes=Math.floor(ms/60000);const seconds=Math.floor(ms%60000/1000);const formattedSeconds=String(seconds).padStart(2,\"0\");return\"\".concat(minutes,\":\").concat(formattedSeconds);}function PlaylistTracklist(_ref){let{items,showTracklistTop=true,alternate=false}=_ref;const linkStyles={textDecoration:'none',// Remove underline\ncolor:'inherit'// Inherit the color from the parent\n};return/*#__PURE__*/_jsx(Row,{className:\"\",children:items.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No items to display\"}):/*#__PURE__*/_jsxs(\"div\",{children:[showTracklistTop&&/*#__PURE__*/_jsxs(\"div\",{className:\"tracklist-top\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"track-number\",children:\"#\"}),/*#__PURE__*/_jsx(\"div\",{className:\"album-head-cover\",children:/*#__PURE__*/_jsx(\"span\",{className:\"album-head\",children:\"Title\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"name-artist\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"song-name\"}),/*#__PURE__*/_jsx(\"span\",{className:\"artist-name\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"album-name\",children:\"Album\"}),/*#__PURE__*/_jsx(\"span\",{className:\"track-number\",children:\"Duration\"})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"separator\"}),/*#__PURE__*/_jsx(\"div\",{children:alternate===true?items.map((item,index)=>/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsxs(\"div\",{className:\"tracklist-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"track-number\",children:index+1}),/*#__PURE__*/_jsxs(\"div\",{className:\"name-artist\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"song-name\",children:item.track.name}),/*#__PURE__*/_jsx(\"span\",{className:\"artist-name\",children:item.artists.map(artist=>artist.name).join(\", \")})]}),/*#__PURE__*/_jsx(\"span\",{className:\"song-length\",children:formatDuration(item.track.duration_ms)})]})},item.id)):items.map((item,index)=>/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsxs(\"div\",{className:\"tracklist-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"track-number\",children:index+1}),/*#__PURE__*/_jsx(\"div\",{className:\"album-cover\",children:/*#__PURE__*/_jsx(\"img\",{src:item.track.album.images[0].url,alt:item.track.name})}),/*#__PURE__*/_jsxs(\"div\",{className:\"name-artist\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"song-name\",children:item.track.name}),/*#__PURE__*/_jsx(\"span\",{className:\"artist-name\",children:item.track.artists.map((artist,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[index!==0&&\", \",\" \",/*#__PURE__*/_jsx(Link,{to:\"/artist/\".concat(artist.id),style:linkStyles,children:artist.name})]},index))})]}),/*#__PURE__*/_jsx(\"span\",{className:\"album-name\",children:/*#__PURE__*/_jsx(Link,{to:\"/album/\".concat(item.track.album.id),style:linkStyles,children:item.track.album.name})}),/*#__PURE__*/_jsx(\"span\",{className:\"song-length\",children:formatDuration(item.track.duration_ms)})]})},item.id))})]})});}export default PlaylistTracklist;","map":{"version":3,"names":["React","Row","Col","Link","jsx","_jsx","jsxs","_jsxs","formatDuration","ms","minutes","Math","floor","seconds","formattedSeconds","String","padStart","concat","PlaylistTracklist","_ref","items","showTracklistTop","alternate","linkStyles","textDecoration","color","className","children","length","map","item","index","xs","track","name","artists","artist","join","duration_ms","id","src","album","images","url","alt","Fragment","to","style"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/home-page/PlaylistTracklist.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction formatDuration(ms) {\r\n  const minutes = Math.floor(ms / 60000);\r\n  const seconds = Math.floor((ms % 60000) / 1000);\r\n  const formattedSeconds = String(seconds).padStart(2, \"0\");\r\n\r\n  return `${minutes}:${formattedSeconds}`;\r\n}\r\n\r\nfunction PlaylistTracklist({\r\n  items,\r\n  showTracklistTop = true,\r\n  alternate = false,\r\n}) {\r\n  \r\n\r\n  const linkStyles = {\r\n    textDecoration: 'none', // Remove underline\r\n    color: 'inherit', // Inherit the color from the parent\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Row className=\"\">\r\n      {items.length === 0 ? (\r\n        <p>No items to display</p>\r\n      ) : (\r\n        <div>\r\n          {showTracklistTop && (\r\n            <div className=\"tracklist-top\">\r\n              <span className=\"track-number\">#</span>\r\n              <div className=\"album-head-cover\">\r\n                <span className=\"album-head\">Title</span>\r\n              </div>\r\n              <div className=\"name-artist\">\r\n                <span className=\"song-name\"></span>\r\n                <span className=\"artist-name\"></span>\r\n              </div>\r\n              <span className=\"album-name\">Album</span>\r\n              <span className=\"track-number\">Duration</span>\r\n            </div>\r\n          )}\r\n          <hr className=\"separator\" />\r\n          <div>\r\n            {alternate === true ? (\r\n              items.map((item, index) => (\r\n                <Col key={item.id} xs={12}>\r\n                  {/* Render tracklist without album covers */}\r\n                  <div className=\"tracklist-item\">\r\n                    <span className=\"track-number\">{index + 1}</span>\r\n                    <div className=\"name-artist\">\r\n                      <span className=\"song-name\">{item.track.name}</span>\r\n                      <span className=\"artist-name\">\r\n                        {item.artists.map((artist) => artist.name).join(\", \")}\r\n                      </span>\r\n                    </div>\r\n                    <span className=\"song-length\">\r\n                      {formatDuration(item.track.duration_ms)}\r\n                    </span>\r\n                  </div>\r\n                </Col>\r\n              ))\r\n            ) : (\r\n              items.map((item, index) => (\r\n                <Col key={item.id} xs={12}>\r\n                  {/* Render tracklist with album covers */}\r\n                  <div className=\"tracklist-item\">\r\n                    <span className=\"track-number\">{index + 1}</span>\r\n                    <div className=\"album-cover\">\r\n                      <img src={item.track.album.images[0].url} alt={item.track.name} />\r\n                    </div>\r\n                    <div className=\"name-artist\">\r\n                      <span className=\"song-name\">{item.track.name}</span>\r\n                      <span className=\"artist-name\">\r\n                        {item.track.artists.map((artist, index) => (\r\n                          <React.Fragment key={index}>\r\n                            {index !== 0 && \", \"} {/* Add comma after the first artist */}\r\n                            <Link to={`/artist/${artist.id}`} style={linkStyles}>\r\n                              {artist.name}\r\n                            </Link>\r\n                          </React.Fragment>\r\n                        ))}\r\n                      </span>\r\n                    </div>\r\n                    <span className=\"album-name\">\r\n                      <Link to={`/album/${item.track.album.id}`} style={linkStyles}>\r\n                            {item.track.album.name}\r\n                      </Link>\r\n                    </span>\r\n                    <span className=\"song-length\">\r\n                      {formatDuration(item.track.duration_ms)}\r\n                    </span>\r\n                  </div>\r\n                </Col>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default PlaylistTracklist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}