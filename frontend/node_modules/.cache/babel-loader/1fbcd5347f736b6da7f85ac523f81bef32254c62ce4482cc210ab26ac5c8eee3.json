{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{useParams,Link}from'react-router-dom';import{Container}from\"react-bootstrap\";import UserIcon from'../Assets/Icons/UserIcon.png';import'./profile.css';import'./home.css';import{ColorExtractor}from'react-color-extractor';import chroma from'chroma-js';import CustomCardResult from\"./CustomCardResult.jsx\";import PlaylistTracklist from\"./PlaylistTracklist.jsx\";import Genres from\"./genres.json\";import GenreIcon from'../Assets/Icons/GenreIcon.png';import Loading from\"./loading.jsx\";import NotFound from'./not-found.jsx';import textFit from'textfit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CLIENT_ID=\"5d8c84c59ac8435e91aa1c9d5d2e9706\";const CLIENT_SECRET=\"93799cce40b641bb951a9b6966e3f2c0\";function PlaylistPage(){var _playlistResults$imag,_playlistResults$imag2,_playlistResults$imag3,_playlistResults$imag4;const[playlistResults,setPlaylistResults]=useState({});const[playlistTracks,setPlaylistTracks]=useState({});const[accessToken,setAccessToken]=useState(\"\");const{playlistId}=useParams();// Get the albumId from the URL\nconst spotifyEndpoints=\"https://api.spotify.com/v1/playlists/\".concat(playlistId);const[loading,setLoading]=useState(true);const[extractedColors,setExtractedColors]=useState([]);const[gradientString,setGradientString]=useState('');const[bodyGradient,setBodyGradient]=useState('');const[activeTab,setActiveTab]=useState('Overview');// Function to handle tab click and set the active tab\nconst handleTabClick=tabName=>{setActiveTab(tabName);};const handleGetColors=colors=>{// Store the extracted colors in state\nsetExtractedColors(colors[2]);const startColor=colors[2];const darkerColor=darkenColor(startColor,0.5);// Darken the color \nconst gradient=\"linear-gradient(to bottom, \".concat(startColor,\", \").concat(darkerColor,\")\");setGradientString(gradient);const bodyDark=darkenColor(startColor,0.6);const bodyGradient=\"linear-gradient(to bottom, \".concat(bodyDark,\" , #201d24,#201d24, #201d24 )\");setBodyGradient(bodyGradient);};const darkenColor=(color,amount)=>{// Remove the \"#\" symbol from the color string and split it into RGB components\nconst[r,g,b]=color.substring(1).match(/.{2}/g).map(value=>parseInt(value,16));// Calculate a darker shade by reducing RGB values\nconst darkerR=Math.round(r*(1-amount));const darkerG=Math.round(g*(1-amount));const darkerB=Math.round(b*(1-amount));// Construct a new color string in hexadecimal format\nreturn\"#\".concat(darkerR.toString(16).padStart(2,'0')).concat(darkerG.toString(16).padStart(2,'0')).concat(darkerB.toString(16).padStart(2,'0'));};useEffect(()=>{async function fetchData(){// Fetch access token once during component initialization\nconst token=await fetchAccessToken();setAccessToken(token);// Fetch album data\nconst playlistData=await performSearch(token,spotifyEndpoints);setPlaylistResults(playlistData);console.log(playlistData);setPlaylistTracks(playlistData.tracks);console.log(playlistData.tracks);setLoading(false);// Set loading to false when data is loaded\n}fetchData();textFit(document.getElementsByClassName('profile-name'));},[playlistId]);// Make sure to update the data when albumId changes\nfunction formatDuration(playlistTracks){let totalDuration=0;playlistTracks.map(item=>{if(item.track.duration_ms){totalDuration+=item.track.duration_ms;}});const totalSeconds=Math.floor(totalDuration/1000);const hours=Math.floor(totalSeconds/3600);const minutes=Math.floor(totalSeconds%3600/60);const seconds=totalSeconds%60;let formattedDuration='';if(hours>0){formattedDuration=\"\".concat(hours.toString(),\" hr \").concat(minutes.toString(),\" min\");}else{formattedDuration=\" \".concat(minutes.toString(),\" min \").concat(seconds.toString(),\" sec\");}return formattedDuration;}async function fetchAccessToken(){const authParameters={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:'grant_type=client_credentials&client_id='+CLIENT_ID+'&client_secret='+CLIENT_SECRET};const data=await fetch('https://accounts.spotify.com/api/token',authParameters).then(result=>result.json());return data.access_token;}async function performSearch(token){let spotifyEndpoint=arguments.length>1&&arguments[1]!==undefined?arguments[1]:spotifyEndpoints;const searchParameters={method:'GET',headers:{'Content-Type':'application/json','Authorization':'Bearer '+token}};try{const response=await fetch(spotifyEndpoint,searchParameters);if(response.ok){return await response.json();}console.log(response);}catch(error){console.error('Error searching:',error);}return{};}const linkStyles={textDecoration:'none',// Remove underline\ncolor:'inherit'// Inherit the color from the parent\n};return/*#__PURE__*/_jsx(\"div\",{className:\"page-body\",children:loading?/*#__PURE__*/_jsx(Loading,{}):!playlistResults?/*#__PURE__*/_jsx(NotFound,{}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ColorExtractor,{src:((_playlistResults$imag=playlistResults.images)===null||_playlistResults$imag===void 0?void 0:(_playlistResults$imag2=_playlistResults$imag[0])===null||_playlistResults$imag2===void 0?void 0:_playlistResults$imag2.url)||GenreIcon,getColors:handleGetColors}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-head\",style:{background:gradientString},children:[/*#__PURE__*/_jsx(\"div\",{className:\"column-left\",children:/*#__PURE__*/_jsx(\"div\",{className:\"artist-image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:((_playlistResults$imag3=playlistResults.images)===null||_playlistResults$imag3===void 0?void 0:(_playlistResults$imag4=_playlistResults$imag3[0])===null||_playlistResults$imag4===void 0?void 0:_playlistResults$imag4.url)||UserIcon,className:\"card-image profile-image mb-3\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"column-right\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-name\",id:\"profile-name\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"profile-caption\",id:\"profile-caption\",children:playlistResults.name})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"caption type-caption\",children:playlistResults.description||\"No description for this playlist.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"genre-list\",children:/*#__PURE__*/_jsxs(\"h1\",{className:\"artist-link\",children:[playlistTracks.total,\" songs, \",formatDuration(playlistTracks.items)]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-body\",style:{background:bodyGradient},children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-body-expand\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"top-songs top-tabs pb-3 pt-3\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"top-tab caption profile-subcaption pb-3 \".concat(activeTab==='Overview'?'active-profile':''),onClick:()=>handleTabClick('Overview'),children:\"Tracklist\"})}),activeTab==='Overview'&&/*#__PURE__*/_jsx(\"div\",{className:\"content-overview\",children:/*#__PURE__*/_jsx(\"div\",{className:\"top-songs pb-5 pt-3\",children:/*#__PURE__*/_jsx(PlaylistTracklist,{items:playlistTracks.items,showTracklistTop:true,alternate:false})})})]})})]})});}export default PlaylistPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Link","Container","UserIcon","ColorExtractor","chroma","CustomCardResult","PlaylistTracklist","Genres","GenreIcon","Loading","NotFound","textFit","jsx","_jsx","jsxs","_jsxs","CLIENT_ID","CLIENT_SECRET","PlaylistPage","_playlistResults$imag","_playlistResults$imag2","_playlistResults$imag3","_playlistResults$imag4","playlistResults","setPlaylistResults","playlistTracks","setPlaylistTracks","accessToken","setAccessToken","playlistId","spotifyEndpoints","concat","loading","setLoading","extractedColors","setExtractedColors","gradientString","setGradientString","bodyGradient","setBodyGradient","activeTab","setActiveTab","handleTabClick","tabName","handleGetColors","colors","startColor","darkerColor","darkenColor","gradient","bodyDark","color","amount","r","g","b","substring","match","map","value","parseInt","darkerR","Math","round","darkerG","darkerB","toString","padStart","fetchData","token","fetchAccessToken","playlistData","performSearch","console","log","tracks","document","getElementsByClassName","formatDuration","totalDuration","item","track","duration_ms","totalSeconds","floor","hours","minutes","seconds","formattedDuration","authParameters","method","headers","body","data","fetch","then","result","json","access_token","spotifyEndpoint","arguments","length","undefined","searchParameters","response","ok","error","linkStyles","textDecoration","className","children","src","images","url","getColors","style","background","id","name","description","total","items","onClick","showTracklistTop","alternate"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/home-page/playlist-page.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef  } from \"react\";\r\nimport { useParams, Link  } from 'react-router-dom';\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport UserIcon from '../Assets/Icons/UserIcon.png';\r\nimport './profile.css'\r\nimport './home.css'\r\nimport { ColorExtractor  } from 'react-color-extractor';\r\nimport chroma from 'chroma-js';\r\nimport CustomCardResult from \"./CustomCardResult.jsx\";\r\nimport PlaylistTracklist from \"./PlaylistTracklist.jsx\"\r\nimport Genres from \"./genres.json\";\r\nimport GenreIcon from '../Assets/Icons/GenreIcon.png'\r\nimport Loading from \"./loading.jsx\"\r\nimport NotFound from './not-found.jsx'\r\n\r\nimport textFit from 'textfit';\r\n\r\n\r\nconst CLIENT_ID = \"5d8c84c59ac8435e91aa1c9d5d2e9706\";\r\nconst CLIENT_SECRET = \"93799cce40b641bb951a9b6966e3f2c0\";\r\n\r\nfunction PlaylistPage() {\r\n\r\n    const [playlistResults, setPlaylistResults] = useState({});\r\n    const [playlistTracks, setPlaylistTracks] = useState({});\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n    const { playlistId } = useParams(); // Get the albumId from the URL\r\n    const spotifyEndpoints = `https://api.spotify.com/v1/playlists/${playlistId}`;\r\n    const [loading, setLoading] = useState(true);\r\n    const [extractedColors, setExtractedColors] = useState([]);\r\n  \r\n\r\n    const [gradientString, setGradientString] = useState('');\r\n    const [bodyGradient, setBodyGradient] = useState('');\r\n    const [activeTab, setActiveTab] = useState('Overview');\r\n\r\n    // Function to handle tab click and set the active tab\r\n    const handleTabClick = (tabName) => {\r\n        setActiveTab(tabName);\r\n    };\r\n\r\n    const handleGetColors = (colors) => {\r\n        // Store the extracted colors in state\r\n        setExtractedColors(colors[2]);\r\n        const startColor = colors[2];\r\n        const darkerColor = darkenColor(startColor, 0.5); // Darken the color \r\n        const gradient = `linear-gradient(to bottom, ${startColor}, ${darkerColor})`;\r\n        setGradientString(gradient);\r\n        const bodyDark = darkenColor(startColor, 0.6);\r\n        const bodyGradient = `linear-gradient(to bottom, ${bodyDark} , #201d24,#201d24, #201d24 )`\r\n        setBodyGradient(bodyGradient)\r\n    };\r\n\r\n    const darkenColor = (color, amount) => {\r\n        // Remove the \"#\" symbol from the color string and split it into RGB components\r\n        const [r, g, b] = color.substring(1).match(/.{2}/g).map((value) => parseInt(value, 16));\r\n    \r\n        // Calculate a darker shade by reducing RGB values\r\n        const darkerR = Math.round(r * (1 - amount));\r\n        const darkerG = Math.round(g * (1 - amount));\r\n        const darkerB = Math.round(b * (1 - amount));\r\n    \r\n        // Construct a new color string in hexadecimal format\r\n        return `#${darkerR.toString(16).padStart(2, '0')}${darkerG.toString(16).padStart(2, '0')}${darkerB.toString(16).padStart(2, '0')}`;\r\n      };\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            // Fetch access token once during component initialization\r\n            const token = await fetchAccessToken();\r\n            setAccessToken(token);\r\n           \r\n            // Fetch album data\r\n\r\n            const playlistData = await performSearch(token, spotifyEndpoints);\r\n            setPlaylistResults(playlistData);\r\n            console.log(playlistData);\r\n\r\n            \r\n            setPlaylistTracks(playlistData.tracks)\r\n            console.log(playlistData.tracks);\r\n\r\n\r\n\r\n    \r\n\r\n            setLoading(false); // Set loading to false when data is loaded\r\n        }\r\n\r\n        fetchData();\r\n        textFit(document.getElementsByClassName('profile-name'));\r\n         \r\n       \r\n       \r\n        \r\n\r\n    }, [playlistId]); // Make sure to update the data when albumId changes\r\n\r\n   \r\n\r\n \r\n      \r\n    function formatDuration(playlistTracks) {\r\n\r\n        \r\n        let totalDuration = 0;\r\n    \r\n      \r\n        playlistTracks.map(item => {\r\n            if (item.track.duration_ms) {\r\n                totalDuration += item.track.duration_ms;\r\n            }\r\n        });\r\n      \r\n           \r\n    \r\n        const totalSeconds = Math.floor(totalDuration / 1000);\r\n        const hours = Math.floor(totalSeconds / 3600);\r\n        const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n        const seconds = totalSeconds % 60;\r\n\r\n        let formattedDuration = ''\r\n        \r\n        if (hours > 0) {\r\n            formattedDuration = `${hours.toString()} hr ${minutes.toString()} min`;\r\n        } else {\r\n            formattedDuration = ` ${minutes.toString()} min ${seconds.toString()} sec`;\r\n        }\r\n        \r\n    \r\n        return formattedDuration;\r\n    }\r\n    \r\n    \r\n\r\n   \r\n\r\n   \r\n\r\n    async function fetchAccessToken() {\r\n        const authParameters = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\r\n        }\r\n        const data = await fetch('https://accounts.spotify.com/api/token', authParameters)\r\n            .then(result => result.json());\r\n        return data.access_token;\r\n    }\r\n\r\n    async function performSearch(token, spotifyEndpoint = spotifyEndpoints) {\r\n        const searchParameters = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(spotifyEndpoint, searchParameters);\r\n            if (response.ok) {\r\n                return await response.json();\r\n                \r\n            }\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.error('Error searching:', error);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    const linkStyles = {\r\n        textDecoration: 'none', // Remove underline\r\n        color: 'inherit', // Inherit the color from the parent\r\n      };\r\n\r\n      return (\r\n        <div className=\"page-body\">\r\n            {loading ? (\r\n                <Loading />\r\n            ) : !playlistResults ? (\r\n                <NotFound />\r\n            ) : (\r\n                <div>\r\n                    <ColorExtractor\r\n                        src={playlistResults.images?.[0]?.url || GenreIcon}\r\n                        getColors={handleGetColors}\r\n                    />\r\n                    <div className=\"profile-head\" style={{ background: gradientString }}>\r\n                        <div className=\"column-left\">\r\n                            <div className=\"artist-image-container\">\r\n                                <img\r\n                                    src={playlistResults.images?.[0]?.url || UserIcon}\r\n                                    className=\"card-image profile-image mb-3\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column-right\">\r\n                            <div className=\"profile-name\" id=\"profile-name\">\r\n                                <h1 className=\"profile-caption\" id=\"profile-caption\">\r\n                                    {playlistResults.name}\r\n                                </h1>\r\n                            </div>\r\n                            <div>\r\n                                <h1 className=\"caption type-caption\">\r\n                                    {playlistResults.description || \"No description for this playlist.\"}\r\n                                </h1>\r\n                            </div>\r\n    \r\n                            <div className=\"genre-list\">\r\n                                <h1 className=\"artist-link\">\r\n                                    {playlistTracks.total} songs, {formatDuration(playlistTracks.items)}\r\n                                </h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"profile-body\" style={{ background: bodyGradient }}>\r\n                        <div className=\"profile-body-expand\">\r\n                            <div className=\"top-songs top-tabs pb-3 pt-3\">\r\n                                <h1\r\n                                    className={`top-tab caption profile-subcaption pb-3 ${\r\n                                        activeTab === 'Overview' ? 'active-profile' : ''\r\n                                    }`}\r\n                                    onClick={() => handleTabClick('Overview')}\r\n                                >\r\n                                    Tracklist\r\n                                </h1>\r\n                            </div>\r\n    \r\n                            {/* Tab Content */}\r\n                            {activeTab === 'Overview' && (\r\n                                <div className=\"content-overview\">\r\n                                    <div className=\"top-songs pb-5 pt-3\">\r\n                                        <PlaylistTracklist\r\n                                            items={playlistTracks.items}\r\n                                            showTracklistTop={true}\r\n                                            alternate={false}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default PlaylistPage;\r\n\r\n\r\n\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}