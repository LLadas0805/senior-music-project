{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from 'fs';\nimport { rename, unlink, mkdtemp } from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\nimport { Browser as SupportedBrowsers, createProfile, Cache, detectBrowserPlatform, Browser } from '@puppeteer/browsers';\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { ProductLauncher } from './ProductLauncher.js';\nimport { rm } from './util/fs.js';\n/**\n * @internal\n */\nexport class FirefoxLauncher extends ProductLauncher {\n  constructor(puppeteer) {\n    super(puppeteer, 'firefox');\n  }\n  /**\n   * @internal\n   */\n  async computeLaunchArguments() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      executablePath,\n      pipe = false,\n      extraPrefsFirefox = {},\n      debuggingPort = null\n    } = options;\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs) {\n      firefoxArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      firefoxArguments.push(...this.defaultArgs(options).filter(arg => {\n        return !ignoreDefaultArgs.includes(arg);\n      }));\n    } else {\n      firefoxArguments.push(...args);\n    }\n    if (!firefoxArguments.some(argument => {\n      return argument.startsWith('--remote-debugging-');\n    })) {\n      if (pipe) {\n        assert(debuggingPort === null, 'Browser should be launched with either pipe or debugging port - not both.');\n      }\n      firefoxArguments.push(\"--remote-debugging-port=\".concat(debuggingPort || 0));\n    }\n    let userDataDir;\n    let isTempUserDataDir = true;\n    // Check for the profile argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    const profileArgIndex = firefoxArguments.findIndex(arg => {\n      return ['-profile', '--profile'].includes(arg);\n    });\n    if (profileArgIndex !== -1) {\n      userDataDir = firefoxArguments[profileArgIndex + 1];\n      if (!userDataDir || !fs.existsSync(userDataDir)) {\n        throw new Error(\"Firefox profile not found at '\".concat(userDataDir, \"'\"));\n      }\n      // When using a custom Firefox profile it needs to be populated\n      // with required preferences.\n      isTempUserDataDir = false;\n    } else {\n      userDataDir = await mkdtemp(this.getProfilePath());\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    await createProfile(SupportedBrowsers.FIREFOX, {\n      path: userDataDir,\n      preferences: {\n        ...extraPrefsFirefox,\n        ...(options.protocol === 'cdp' ? {\n          // Temporarily force disable BFCache in parent (https://bit.ly/bug-1732263)\n          'fission.bfcacheInParent': false\n        } : {}),\n        // Force all web content to use a single content process. TODO: remove\n        // this once Firefox supports mouse event dispatch from the main frame\n        // context. Once this happens, webContentIsolationStrategy should only\n        // be set for CDP. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1773393\n        'fission.webContentIsolationStrategy': 0\n      }\n    });\n    let firefoxExecutable;\n    if (this.puppeteer._isPuppeteerCore || executablePath) {\n      assert(executablePath, \"An `executablePath` must be specified for `puppeteer-core`\");\n      firefoxExecutable = executablePath;\n    } else {\n      firefoxExecutable = this.executablePath();\n    }\n    return {\n      isTempUserDataDir,\n      userDataDir,\n      args: firefoxArguments,\n      executablePath: firefoxExecutable\n    };\n  }\n  /**\n   * @internal\n   */\n  async cleanUserDataDir(userDataDir, opts) {\n    if (opts.isTemp) {\n      try {\n        await rm(userDataDir);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    } else {\n      try {\n        // When an existing user profile has been used remove the user\n        // preferences file and restore possibly backuped preferences.\n        await unlink(path.join(userDataDir, 'user.js'));\n        const prefsBackupPath = path.join(userDataDir, 'prefs.js.puppeteer');\n        if (fs.existsSync(prefsBackupPath)) {\n          const prefsPath = path.join(userDataDir, 'prefs.js');\n          await unlink(prefsPath);\n          await rename(prefsBackupPath, prefsPath);\n        }\n      } catch (error) {\n        debugError(error);\n      }\n    }\n  }\n  executablePath() {\n    // replace 'latest' placeholder with actual downloaded revision\n    if (this.puppeteer.browserRevision === 'latest') {\n      const cache = new Cache(this.puppeteer.defaultDownloadPath);\n      const installedFirefox = cache.getInstalledBrowsers().find(browser => {\n        return browser.platform === detectBrowserPlatform() && browser.browser === Browser.FIREFOX;\n      });\n      if (installedFirefox) {\n        this.actualBrowserRevision = installedFirefox.buildId;\n      }\n    }\n    return this.resolveExecutablePath();\n  }\n  defaultArgs() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    const firefoxArguments = ['--no-remote'];\n    switch (os.platform()) {\n      case 'darwin':\n        firefoxArguments.push('--foreground');\n        break;\n      case 'win32':\n        firefoxArguments.push('--wait-for-browser');\n        break;\n    }\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    if (headless) {\n      firefoxArguments.push('--headless');\n    }\n    if (devtools) {\n      firefoxArguments.push('--devtools');\n    }\n    if (args.every(arg => {\n      return arg.startsWith('-');\n    })) {\n      firefoxArguments.push('about:blank');\n    }\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n}","map":{"version":3,"names":["fs","rename","unlink","mkdtemp","os","path","Browser","SupportedBrowsers","createProfile","Cache","detectBrowserPlatform","debugError","assert","ProductLauncher","rm","FirefoxLauncher","constructor","puppeteer","computeLaunchArguments","options","arguments","length","undefined","ignoreDefaultArgs","args","executablePath","pipe","extraPrefsFirefox","debuggingPort","firefoxArguments","push","defaultArgs","Array","isArray","filter","arg","includes","some","argument","startsWith","concat","userDataDir","isTempUserDataDir","profileArgIndex","findIndex","existsSync","Error","getProfilePath","FIREFOX","preferences","protocol","firefoxExecutable","_isPuppeteerCore","cleanUserDataDir","opts","isTemp","error","join","prefsBackupPath","prefsPath","browserRevision","cache","defaultDownloadPath","installedFirefox","getInstalledBrowsers","find","browser","platform","actualBrowserRevision","buildId","resolveExecutablePath","devtools","headless","every"],"sources":["C:\\Users\\luker\\SeniorProject\\senior-music-project\\frontend\\node_modules\\puppeteer-core\\src\\node\\FirefoxLauncher.ts"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport {rename, unlink, mkdtemp} from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\n\nimport {\n  Browser as SupportedBrowsers,\n  createProfile,\n  Cache,\n  detectBrowserPlatform,\n  Browser,\n} from '@puppeteer/browsers';\n\nimport {debugError} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\nimport type {\n  BrowserLaunchArgumentOptions,\n  PuppeteerNodeLaunchOptions,\n} from './LaunchOptions.js';\nimport {ProductLauncher, type ResolvedLaunchArgs} from './ProductLauncher.js';\nimport type {PuppeteerNode} from './PuppeteerNode.js';\nimport {rm} from './util/fs.js';\n\n/**\n * @internal\n */\nexport class FirefoxLauncher extends ProductLauncher {\n  constructor(puppeteer: PuppeteerNode) {\n    super(puppeteer, 'firefox');\n  }\n  /**\n   * @internal\n   */\n  override async computeLaunchArguments(\n    options: PuppeteerNodeLaunchOptions = {}\n  ): Promise<ResolvedLaunchArgs> {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      executablePath,\n      pipe = false,\n      extraPrefsFirefox = {},\n      debuggingPort = null,\n    } = options;\n\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs) {\n      firefoxArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      firefoxArguments.push(\n        ...this.defaultArgs(options).filter(arg => {\n          return !ignoreDefaultArgs.includes(arg);\n        })\n      );\n    } else {\n      firefoxArguments.push(...args);\n    }\n\n    if (\n      !firefoxArguments.some(argument => {\n        return argument.startsWith('--remote-debugging-');\n      })\n    ) {\n      if (pipe) {\n        assert(\n          debuggingPort === null,\n          'Browser should be launched with either pipe or debugging port - not both.'\n        );\n      }\n      firefoxArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n    }\n\n    let userDataDir: string | undefined;\n    let isTempUserDataDir = true;\n\n    // Check for the profile argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    const profileArgIndex = firefoxArguments.findIndex(arg => {\n      return ['-profile', '--profile'].includes(arg);\n    });\n\n    if (profileArgIndex !== -1) {\n      userDataDir = firefoxArguments[profileArgIndex + 1];\n      if (!userDataDir || !fs.existsSync(userDataDir)) {\n        throw new Error(`Firefox profile not found at '${userDataDir}'`);\n      }\n\n      // When using a custom Firefox profile it needs to be populated\n      // with required preferences.\n      isTempUserDataDir = false;\n    } else {\n      userDataDir = await mkdtemp(this.getProfilePath());\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n\n    await createProfile(SupportedBrowsers.FIREFOX, {\n      path: userDataDir,\n      preferences: {\n        ...extraPrefsFirefox,\n        ...(options.protocol === 'cdp'\n          ? {\n              // Temporarily force disable BFCache in parent (https://bit.ly/bug-1732263)\n              'fission.bfcacheInParent': false,\n            }\n          : {}),\n        // Force all web content to use a single content process. TODO: remove\n        // this once Firefox supports mouse event dispatch from the main frame\n        // context. Once this happens, webContentIsolationStrategy should only\n        // be set for CDP. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1773393\n        'fission.webContentIsolationStrategy': 0,\n      },\n    });\n\n    let firefoxExecutable: string;\n    if (this.puppeteer._isPuppeteerCore || executablePath) {\n      assert(\n        executablePath,\n        `An \\`executablePath\\` must be specified for \\`puppeteer-core\\``\n      );\n      firefoxExecutable = executablePath;\n    } else {\n      firefoxExecutable = this.executablePath();\n    }\n\n    return {\n      isTempUserDataDir,\n      userDataDir,\n      args: firefoxArguments,\n      executablePath: firefoxExecutable,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  override async cleanUserDataDir(\n    userDataDir: string,\n    opts: {isTemp: boolean}\n  ): Promise<void> {\n    if (opts.isTemp) {\n      try {\n        await rm(userDataDir);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    } else {\n      try {\n        // When an existing user profile has been used remove the user\n        // preferences file and restore possibly backuped preferences.\n        await unlink(path.join(userDataDir, 'user.js'));\n\n        const prefsBackupPath = path.join(userDataDir, 'prefs.js.puppeteer');\n        if (fs.existsSync(prefsBackupPath)) {\n          const prefsPath = path.join(userDataDir, 'prefs.js');\n          await unlink(prefsPath);\n          await rename(prefsBackupPath, prefsPath);\n        }\n      } catch (error) {\n        debugError(error);\n      }\n    }\n  }\n\n  override executablePath(): string {\n    // replace 'latest' placeholder with actual downloaded revision\n    if (this.puppeteer.browserRevision === 'latest') {\n      const cache = new Cache(this.puppeteer.defaultDownloadPath!);\n      const installedFirefox = cache.getInstalledBrowsers().find(browser => {\n        return (\n          browser.platform === detectBrowserPlatform() &&\n          browser.browser === Browser.FIREFOX\n        );\n      });\n      if (installedFirefox) {\n        this.actualBrowserRevision = installedFirefox.buildId;\n      }\n    }\n    return this.resolveExecutablePath();\n  }\n\n  override defaultArgs(options: BrowserLaunchArgumentOptions = {}): string[] {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null,\n    } = options;\n\n    const firefoxArguments = ['--no-remote'];\n\n    switch (os.platform()) {\n      case 'darwin':\n        firefoxArguments.push('--foreground');\n        break;\n      case 'win32':\n        firefoxArguments.push('--wait-for-browser');\n        break;\n    }\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    if (headless) {\n      firefoxArguments.push('--headless');\n    }\n    if (devtools) {\n      firefoxArguments.push('--devtools');\n    }\n    if (\n      args.every(arg => {\n        return arg.startsWith('-');\n      })\n    ) {\n      firefoxArguments.push('about:blank');\n    }\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}