{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useLocation}from\"react-router-dom\";import'bootstrap/dist/css/bootstrap.min.css';import'../home-page/home.css';import axios from\"axios\";import{Container,InputGroup,FormControl,Button,Row,Card}from\"react-bootstrap\";import SearchFilter from\"./search-filter.jsx\";import debounce from'lodash/debounce';import CustomCardResult from\"../cards-lists/CustomCardResult.jsx\";import CustomTracklist from\"../cards-lists/CustomTracklist.jsx\";import Genres from\"./genres.json\";import Loading from\"./loading.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const CLIENT_ID=\"5d8c84c59ac8435e91aa1c9d5d2e9706\";const CLIENT_SECRET=\"93799cce40b641bb951a9b6966e3f2c0\";function Search(){const location=useLocation();const[searchInput,setSearchInput]=useState(\"\");const[accessToken,setAccessToken]=useState(\"\");const[searchType,setSearchType]=useState(\"all\");const[albums,setAlbums]=useState([]);const[songs,setSongs]=useState([]);const[artists,setArtists]=useState([]);const[searching,setSearching]=useState(false);const[users,setUsers]=useState([]);const[genres,setGenres]=useState([]);const[playlists,setPlaylists]=useState([]);const[features,setFeatures]=useState([]);const types=[{label:\"All\",value:\"all\"},{label:\"Artists\",value:\"artist\"},{label:\"Albums\",value:\"album\"},{label:\"Songs\",value:\"track\"},{label:\"Genres & Moods\",value:\"genre\"},{label:\"Users\",value:\"user\"}];useEffect(()=>{fetchAccessToken();},[]);async function fetchAccessToken(){// API Access Token\nvar authParameters={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:'grant_type=client_credentials&client_id='+CLIENT_ID+'&client_secret='+CLIENT_SECRET};const data=await fetch('https://accounts.spotify.com/api/token',authParameters).then(result=>result.json());setAccessToken(data.access_token);featureSearch(data.access_token);}useEffect(()=>{// Perform the delayed search when searchInput changes\nconst delaySearch=debounce(()=>{performSearch();},700);if(searchInput.trim()!==\"\"){setSearching(true);delaySearch();}else{setAlbums([]);setArtists([]);setSongs([]);setSearching(false);}// Cleanup the delayed search if the component unmounts or the input changes\nreturn()=>{delaySearch.cancel();};},[searchInput]);async function featureSearch(accessToken){var searchParameters={method:'GET',headers:{'Content-Type':'application/json','Authorization':'Bearer '+accessToken}};const featuredResults=await fetch(\"https://api.spotify.com/v1/browse/featured-playlists\",searchParameters).then(response=>response.json()).catch(error=>{console.error('Error searching:',error);return{};});console.log({featuredResults});if(featuredResults.playlists){setFeatures(featuredResults.playlists.items);}else{setFeatures([]);}}// Function to find the closest match for multiple genres\nfunction findClosestGenres(input,genres){const inputLength=input.length;const slicedGenres=genres.map(genre=>genre.slice(0,inputLength).toLowerCase());const matches=[];slicedGenres.forEach((slicedGenre,index)=>{if(slicedGenre===input.toLowerCase()){matches.push(genres[index]);}});return matches.length>0?matches:[];}async function performSearch(){console.log(\"Searching for \"+searchInput);console.log(\"Searching for \"+searchInput);if(!searchInput||searchInput.trim()===\"\"){setAlbums([]);setSongs([]);setArtists([]);setUsers([]);setSearching(false);return;}let searchUrl=\"https://api.spotify.com/v1/search?q=\".concat(searchInput,\"&type=artist,album,track\");let browsingUrl=\"https://api.spotify.com/v1/search?q=genre%3A\".concat(searchInput,\"&type=track\");let playlistUrl=\"https://api.spotify.com/v1/browse/categories/\".concat(searchInput,\"/playlists\");// Get request using search to get the Artist ID\nvar searchParameters={method:'GET',headers:{'Content-Type':'application/json','Authorization':'Bearer '+accessToken}};const searchResults=await fetch(searchUrl,searchParameters).then(response=>response.json()).catch(error=>{console.error('Error searching:',error);return{};});const userResults=await axios.post(\"http://localhost:3000/search\",{user:searchInput}).then(response=>response.data).catch(e=>{console.log(e);return{};});const trendResults=await fetch(browsingUrl,searchParameters).then(response=>response.json()).catch(error=>{console.error('Error searching:',error);return{};});const playlistResults=await fetch(playlistUrl,searchParameters).then(response=>response.json()).catch(error=>{console.error('Error searching:',error);return{};});console.log({trendResults});console.log({userResults});console.log({searchResults});// Find the closest genre to the user input\nconst closestGenre=findClosestGenres(searchInput.toLowerCase(),Genres.genres);console.log(\"Closest genre:\",closestGenre);// Extract and set the results for each type\nif(searchResults.artists){setArtists(searchResults.artists.items.filter(item=>item!==null));}else{setArtists([]);}if(searchResults.albums){setAlbums(searchResults.albums.items.filter(item=>item!==null));}else{setAlbums([]);}if(searchResults.tracks){setSongs(searchResults.tracks.items.filter(item=>item!==null));}else{setSongs([]);}if(userResults){setUsers(userResults);}else{setUsers([]);}if(closestGenre){setGenres(closestGenre);}else{setGenres([]);}if(playlistResults.playlists){console.log(playlistResults.playlists.items);setPlaylists(playlistResults.playlists.items.filter(item=>item!==null));}else{setPlaylists([]);}setSearching(false);}return/*#__PURE__*/_jsxs(\"div\",{className:\"homepage\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pt-4 pb-3 search-bar\",children:[/*#__PURE__*/_jsxs(InputGroup,{className:\"mb-3  form\",children:[/*#__PURE__*/_jsx(FormControl,{type:\"text\",id:\"searchresult\",className:\"search-input\",value:searchInput,onChange:e=>setSearchInput(e.target.value),placeholder:\"Search for albums, artists, users etc.\",style:{backgroundColor:'transparent',outline:'none',border:'none'}}),/*#__PURE__*/_jsx(Button,{className:\"search-button\",onClick:()=>setSearchInput(\"\"),style:{display:searchInput?'block':'none',backgroundColor:'transparent'},children:\"X\"})]}),/*#__PURE__*/_jsx(SearchFilter,{searchType:searchType,setSearchType:setSearchType,types:types})]}),/*#__PURE__*/_jsx(\"div\",{className:\"search-results\",children:searching?/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(Loading,{})}):/*#__PURE__*/_jsx(_Fragment,{children:searchInput?/*#__PURE__*/_jsxs(Row,{className:\"search-rows\",children:[searchType===\"all\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[artists.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption\",children:\"Top Artists\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:artists.slice(0,6),subtitleType:\"artist\",singleRow:true})]}),albums.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption\",children:\"Top Albums\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:albums.slice(0,6),subtitleType:\"album\",singleRow:true})]}),songs.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption\",children:\"Top Songs\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:songs.slice(0,6),subtitleType:\"song\",singleRow:true})]}),users.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption\",children:\"Top Users\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:users.slice(0,6),subtitleType:\"user\",singleRow:true})]}),genres.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption\",children:\"Genres & Moods\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:genres.slice(0,6),subtitleType:\"genre\",singleRow:true})]})]}),searchType===\"artist\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"caption\",children:[\"Artist results for \\\"\",searchInput,\"\\\"\"]})}),/*#__PURE__*/_jsx(CustomCardResult,{items:artists,subtitleType:\"artist\"})]}),searchType===\"album\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"caption\",children:[\"Album results for \\\"\",searchInput,\"\\\"\"]})}),\" \",/*#__PURE__*/_jsx(CustomCardResult,{items:albums,subtitleType:\"album\"})]}),searchType===\"track\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"caption\",children:[\"Song results for \\\"\",searchInput,\"\\\"\"]})}),\" \",/*#__PURE__*/_jsx(CustomTracklist,{items:songs})]}),searchType===\"user\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"caption\",children:[\"User results for \\\"\",searchInput,\"\\\"\"]})}),/*#__PURE__*/_jsx(CustomCardResult,{items:users,subtitleType:\"user\"})]}),searchType===\"genre\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"caption\",children:[\"Genre results for \\\"\",searchInput,\"\\\"\"]})}),/*#__PURE__*/_jsx(CustomCardResult,{items:genres,subtitleType:\"genre\"}),/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"caption\",children:[\"Mood results for \\\"\",searchInput,\"\\\"\"]})}),/*#__PURE__*/_jsx(CustomCardResult,{items:playlists,subtitleType:\"playlist\"})]})]}):/*#__PURE__*/_jsxs(Row,{className:\"search-rows\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption\",children:\"Browse Trending Music\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:features,subtitleType:\"playlist\"}),/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption\",children:\"Browse Genres\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:Genres.genres,subtitleType:\"genre\"})]})})})]});}export default Search;","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","Container","InputGroup","FormControl","Button","Row","Card","SearchFilter","debounce","CustomCardResult","CustomTracklist","Genres","Loading","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CLIENT_ID","CLIENT_SECRET","Search","location","searchInput","setSearchInput","accessToken","setAccessToken","searchType","setSearchType","albums","setAlbums","songs","setSongs","artists","setArtists","searching","setSearching","users","setUsers","genres","setGenres","playlists","setPlaylists","features","setFeatures","types","label","value","fetchAccessToken","authParameters","method","headers","body","data","fetch","then","result","json","access_token","featureSearch","delaySearch","performSearch","trim","cancel","searchParameters","featuredResults","response","catch","error","console","log","items","findClosestGenres","input","inputLength","length","slicedGenres","map","genre","slice","toLowerCase","matches","forEach","slicedGenre","index","push","searchUrl","concat","browsingUrl","playlistUrl","searchResults","userResults","post","user","e","trendResults","playlistResults","closestGenre","filter","item","tracks","className","children","type","id","onChange","target","placeholder","style","backgroundColor","outline","border","onClick","display","subtitleType","singleRow"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/search-page/search.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../home-page/home.css'\r\nimport axios from \"axios\"\r\nimport { Container, InputGroup, FormControl, Button, Row, Card } from \"react-bootstrap\";\r\nimport SearchFilter from \"./search-filter.jsx\";\r\nimport debounce from 'lodash/debounce';\r\nimport CustomCardResult from \"../cards-lists/CustomCardResult.jsx\";\r\nimport CustomTracklist from \"../cards-lists/CustomTracklist.jsx\"\r\nimport Genres from \"./genres.json\";\r\nimport Loading from \"./loading.jsx\"\r\n\r\n\r\nconst CLIENT_ID = \"5d8c84c59ac8435e91aa1c9d5d2e9706\";\r\nconst CLIENT_SECRET = \"93799cce40b641bb951a9b6966e3f2c0\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Search() {\r\n    const location = useLocation();\r\n\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n    const [searchType, setSearchType] = useState(\"all\");\r\n    const [albums, setAlbums] = useState([]);\r\n    const [songs, setSongs] = useState([]);\r\n    const [artists, setArtists] = useState([]);\r\n    const [searching, setSearching] = useState(false);\r\n    const [users, setUsers] = useState([])\r\n    const [genres, setGenres] = useState([]);\r\n \r\n    const [playlists, setPlaylists] = useState([]);\r\n    const [features, setFeatures] = useState([]);\r\n    \r\n\r\n    const types = [\r\n        { label: \"All\", value: \"all\" },\r\n        { label: \"Artists\", value: \"artist\" },\r\n        { label: \"Albums\", value: \"album\" },\r\n        { label: \"Songs\", value: \"track\" },\r\n        { label: \"Genres & Moods\", value: \"genre\" },\r\n        { label: \"Users\", value: \"user\"},\r\n       \r\n    ];\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        \r\n        fetchAccessToken();\r\n                \r\n                \r\n                \r\n             \r\n            \r\n      \r\n          \r\n        \r\n\r\n      }, []);\r\n\r\n    async function fetchAccessToken() {\r\n        \r\n        // API Access Token\r\n        var authParameters = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\r\n        }\r\n        const data = await fetch('https://accounts.spotify.com/api/token', authParameters)\r\n            .then(result => result.json());\r\n        setAccessToken(data.access_token);\r\n        featureSearch(data.access_token);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Perform the delayed search when searchInput changes\r\n        const delaySearch = debounce(() => {\r\n            performSearch();\r\n            \r\n        }, 700);\r\n\r\n        if (searchInput.trim() !== \"\") {\r\n            setSearching(true);\r\n            delaySearch();\r\n        } else {\r\n            setAlbums([]);\r\n            setArtists([]);\r\n            setSongs([]);\r\n            setSearching(false);\r\n        }\r\n\r\n        // Cleanup the delayed search if the component unmounts or the input changes\r\n        return () => {\r\n            delaySearch.cancel();\r\n        };\r\n    }, [searchInput]);\r\n\r\n    \r\n    async function featureSearch(accessToken) {\r\n        var searchParameters = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + accessToken\r\n            }\r\n        }\r\n        \r\n        const featuredResults = await fetch(`https://api.spotify.com/v1/browse/featured-playlists`, searchParameters)\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                console.error('Error searching:', error);\r\n                return {};\r\n            });\r\n        \r\n        \r\n        console.log({featuredResults})\r\n\r\n        if (featuredResults.playlists) {\r\n            \r\n            setFeatures(featuredResults.playlists.items);\r\n        } else {\r\n            setFeatures([]);\r\n        }\r\n\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    // Function to find the closest match for multiple genres\r\n    function findClosestGenres(input, genres) {\r\n        const inputLength = input.length;\r\n        const slicedGenres = genres.map(genre => genre.slice(0, inputLength).toLowerCase());\r\n    \r\n        const matches = [];\r\n        slicedGenres.forEach((slicedGenre, index) => {\r\n        if (slicedGenre === input.toLowerCase()) {\r\n            matches.push(genres[index]);\r\n        }\r\n        });\r\n    \r\n        return matches.length > 0 ? matches : [];\r\n    }\r\n    \r\n   \r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n    async function performSearch() {\r\n        console.log(\"Searching for \" + searchInput);\r\n        console.log(\"Searching for \" + searchInput);\r\n\r\n        if (!searchInput || searchInput.trim() === \"\") {\r\n            \r\n            setAlbums([]);\r\n            setSongs([]);\r\n            setArtists([]);\r\n            setUsers([]);\r\n            setSearching(false);\r\n            return;\r\n        }\r\n\r\n        let searchUrl = `https://api.spotify.com/v1/search?q=${searchInput}&type=artist,album,track`;\r\n\r\n       \r\n            \r\n        let browsingUrl = `https://api.spotify.com/v1/search?q=genre%3A${searchInput}&type=track`;\r\n\r\n        let playlistUrl = `https://api.spotify.com/v1/browse/categories/${searchInput}/playlists`;\r\n\r\n       \r\n\r\n        // Get request using search to get the Artist ID\r\n        var searchParameters = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + accessToken\r\n            }\r\n        }\r\n\r\n        const searchResults = await fetch(searchUrl, searchParameters)\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                console.error('Error searching:', error);\r\n                return {};\r\n            });\r\n        \r\n\r\n            \r\n        const userResults = await axios.post(\"http://localhost:3000/search\", {user: searchInput})\r\n            .then(response => response.data)\r\n            .catch(e=> {\r\n                console.log(e);\r\n                return {}\r\n            })\r\n                \r\n        \r\n\r\n        const trendResults = await fetch(browsingUrl, searchParameters)\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                console.error('Error searching:', error);\r\n                return {};\r\n            });\r\n\r\n        const playlistResults = await fetch(playlistUrl, searchParameters)\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n                console.error('Error searching:', error);\r\n                return {};\r\n            });\r\n        \r\n        \r\n       \r\n        console.log({trendResults});\r\n        console.log({userResults});\r\n        console.log({searchResults});\r\n        \r\n\r\n        // Find the closest genre to the user input\r\n        const closestGenre = findClosestGenres(searchInput.toLowerCase(), Genres.genres);\r\n        console.log(\"Closest genre:\", closestGenre);\r\n\r\n        \r\n        \r\n        \r\n        // Extract and set the results for each type\r\n        if (searchResults.artists) {\r\n            setArtists((searchResults.artists.items).filter(item => item !== null));\r\n  \r\n        } else {\r\n            setArtists([]);\r\n        }\r\n\r\n        if (searchResults.albums) {\r\n            setAlbums((searchResults.albums.items).filter(item => item !== null));\r\n        } else {\r\n            setAlbums([]);\r\n        }\r\n\r\n        if (searchResults.tracks) {\r\n            setSongs((searchResults.tracks.items).filter(item => item !== null));\r\n        } else {\r\n            setSongs([]);\r\n        }\r\n\r\n        if (userResults) {\r\n            setUsers(userResults);\r\n        } else {\r\n            setUsers([]);\r\n        }\r\n\r\n        if(closestGenre) {\r\n            setGenres(closestGenre);\r\n        } else {\r\n            setGenres([]);\r\n        }\r\n\r\n        if (playlistResults.playlists) {\r\n            console.log(playlistResults.playlists.items);\r\n            setPlaylists((playlistResults.playlists.items).filter(item => item !== null));\r\n        } else {\r\n            setPlaylists([]);\r\n        }\r\n\r\n       \r\n        setSearching(false);\r\n    \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"pt-4 pb-3 search-bar\">\r\n                <InputGroup className=\"mb-3  form\">\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        id=\"searchresult\"\r\n                        className=\"search-input\"\r\n                        value={searchInput}\r\n                        onChange={(e) => setSearchInput(e.target.value)}\r\n                        placeholder=\"Search for albums, artists, users etc.\"\r\n                        style={{ backgroundColor: 'transparent', outline: 'none', border: 'none' }}\r\n                    />\r\n                    <Button\r\n                        className=\"search-button\"\r\n                        onClick={() => setSearchInput(\"\")}\r\n                        style={{ display: searchInput ? 'block' : 'none', backgroundColor: 'transparent' }}\r\n                    >\r\n                        X\r\n                    </Button>\r\n                </InputGroup>\r\n                <SearchFilter searchType={searchType} setSearchType={setSearchType} types={types} />\r\n            </div>\r\n            <div className=\"search-results\">\r\n            {searching ? (\r\n                <div className=\"caption-div\">\r\n                    <Loading/>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {searchInput ? (\r\n                        <Row className=\"search-rows\">\r\n                            \r\n                            {searchType === \"all\" && (\r\n                                <>\r\n                                   \r\n                                   {artists.length > 0 && (\r\n                                        <>\r\n                                            <div className=\"caption-div\">\r\n                                                <p className=\"caption\">Top Artists</p>\r\n                                            </div>\r\n                                            <CustomCardResult items={artists.slice(0, 6)} subtitleType=\"artist\" singleRow={true} />\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {albums.length > 0 && (\r\n                                        <>\r\n                                            <div className=\"caption-div\">\r\n                                                <p className=\"caption\">Top Albums</p>\r\n                                            </div>\r\n                                            <CustomCardResult items={albums.slice(0, 6)} subtitleType=\"album\" singleRow={true} />\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {songs.length > 0 && (\r\n                                        <>\r\n                                            <div className=\"caption-div\">\r\n                                                <p className=\"caption\">Top Songs</p>\r\n                                            </div>\r\n                                            <CustomCardResult items={songs.slice(0, 6)} subtitleType=\"song\" singleRow={true} />\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {users.length > 0 && (\r\n                                        <>\r\n                                            <div className=\"caption-div\">\r\n                                                <p className=\"caption\">Top Users</p>\r\n                                            </div>\r\n                                            <CustomCardResult items={users.slice(0, 6)} subtitleType=\"user\" singleRow={true} />\r\n                                        </>\r\n                                    )}\r\n\r\n                                    {genres.length > 0 && (\r\n                                        <>\r\n                                            <div className=\"caption-div\">\r\n                                                <p className=\"caption\">Genres & Moods</p>\r\n                                            </div>\r\n                                            <CustomCardResult items={genres.slice(0, 6)} subtitleType=\"genre\" singleRow={true} />\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            {searchType === \"artist\" && \r\n                            <><div className=\"caption-div\">\r\n                                            <p className=\"caption\">Artist results for \"{searchInput}\"</p>\r\n                            </div><CustomCardResult items={artists} subtitleType=\"artist\" /></>}\r\n\r\n                            {searchType === \"album\" &&\r\n                            <><div className=\"caption-div\">\r\n                            <p className=\"caption\">Album results for \"{searchInput}\"</p>\r\n                            </div> <CustomCardResult items={albums} subtitleType=\"album\" /></>}\r\n\r\n                            {searchType === \"track\" && \r\n                            <><div className=\"caption-div\">\r\n                            <p className=\"caption\">Song results for \"{searchInput}\"</p>\r\n                            </div> <CustomTracklist items={songs} /></>}\r\n                            \r\n                            {searchType === \"user\" && \r\n                            <><div className=\"caption-div\">\r\n                            <p className=\"caption\">User results for \"{searchInput}\"</p>\r\n                            </div><CustomCardResult items={users} subtitleType=\"user\" /></>}\r\n\r\n                            {searchType === \"genre\" && \r\n                            <><div className=\"caption-div\">\r\n                            <p className=\"caption\">Genre results for \"{searchInput}\"</p>\r\n                            </div><CustomCardResult items={genres} subtitleType=\"genre\" />\r\n                            <div className=\"caption-div\">\r\n                            <p className=\"caption\">Mood results for \"{searchInput}\"</p>\r\n                            </div>\r\n                            <CustomCardResult items={playlists} subtitleType=\"playlist\" /></>}\r\n                        </Row>\r\n                    ) : (\r\n                        <Row className=\"search-rows\">\r\n                            <div className=\"caption-div\">\r\n                                <p className=\"caption\">Browse Trending Music</p>\r\n                            </div>\r\n                            <CustomCardResult items={features} subtitleType=\"playlist\" />\r\n                            <div className=\"caption-div\">\r\n                                <p className=\"caption\">Browse Genres</p>\r\n                            </div>\r\n                            <CustomCardResult items={Genres.genres} subtitleType=\"genre\" />\r\n                        </Row>\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}