{"ast":null,"code":"// import modules and components\nimport React,{useState,useEffect}from\"react\";import{scaleSequential}from'd3-scale';import{interpolateRgb}from'd3-interpolate';import{Link}from'react-router-dom';import Loading from\"./loading.jsx\";// Styles for links\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const linkStyles={textDecoration:'none',color:'inherit'};// Spotify Client Credentials\nconst CLIENT_ID=\"5d8c84c59ac8435e91aa1c9d5d2e9706\";const CLIENT_SECRET=\"93799cce40b641bb951a9b6966e3f2c0\";function UserReviewResults(_ref){let{reviews}=_ref;// Create a color scale from green to red\nconst colorScale=scaleSequential(interpolateRgb('rgb(189, 16, 16)','rgb(87, 163, 36)')).domain([0,100]);// State variables for album results and loading state\nconst[albumResults,setAlbumResults]=useState([]);const[loading,setLoading]=useState(true);// Fetch album information based on the review's albumId\nasync function fetchAlbumInfo(albumId){try{const token=await fetchAccessToken();// Fetch access token\nconst albumEndpoint=\"https://api.spotify.com/v1/albums/\".concat(albumId);const albumInfo=await performSearch(token,albumEndpoint);// Fetch album information\nreturn albumInfo;}catch(error){console.error('Error fetching album info:',error);return null;}}// Fetch data for all reviews\nconst fetchAlbumData=async()=>{try{for(const review of reviews){const albumInfo=await fetchAlbumInfo(review.albumId);setAlbumResults(prevAlbumResults=>[...prevAlbumResults,albumInfo]);}}catch(error){console.error('Error fetching album data:',error);}setLoading(false);};// Use effect to fetch album data on component mount\nuseEffect(()=>{const fetchData=async()=>{try{await fetchAlbumData();}catch(error){console.error('Error fetching album data:',error);}};fetchData();// Fetch data on component mount\n},[]);// Empty dependency array ensures this runs only once\n// Function to fetch Spotify access token\nasync function fetchAccessToken(){// Request parameters for getting the token\nconst authParameters={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:'grant_type=client_credentials&client_id='+CLIENT_ID+'&client_secret='+CLIENT_SECRET};// Fetch the token and return it\nconst data=await fetch('https://accounts.spotify.com/api/token',authParameters).then(result=>result.json());return data.access_token;}// Function to perform a search at a given endpoint via Spotify API\nasync function performSearch(token,spotifyEndpoint){const searchParameters={method:'GET',headers:{'Content-Type':'application/json','Authorization':'Bearer '+token}};try{const response=await fetch(spotifyEndpoint,searchParameters);if(response.ok){return await response.json();}}catch(error){console.error('Error searching:',error);}return[];}// Rendering the reviews and album information\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"reviews-container\",children:[loading?/*#__PURE__*/_jsx(Loading,{}):reviews.map((review,index)=>{var _albumResults$index,_albumResults$index$i;return/*#__PURE__*/_jsxs(\"div\",{className:\"review-row\",children:[/*#__PURE__*/_jsx(\"hr\",{className:\"separator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"review-columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"album-column\",children:/*#__PURE__*/_jsx(Link,{to:\"/album/\".concat(review.albumId),style:linkStyles,children:/*#__PURE__*/_jsx(\"img\",{src:(_albumResults$index=albumResults[index])===null||_albumResults$index===void 0?void 0:(_albumResults$index$i=_albumResults$index.images[0])===null||_albumResults$index$i===void 0?void 0:_albumResults$index$i.url,style:{width:'200px',height:'200px'},alt:\"Album \".concat(index)})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"review-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-score review-text\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"review-head\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"review-album-head\",children:[/*#__PURE__*/_jsx(Link,{to:\"/album/\".concat(review.albumId),style:linkStyles,children:/*#__PURE__*/_jsx(\"p\",{className:\"review-author-alt\",children:albumResults[index].name})}),/*#__PURE__*/_jsx(Link,{to:\"/artist/\".concat(albumResults[index].artists[0].id),style:linkStyles,children:/*#__PURE__*/_jsxs(\"p\",{className:\"review-author-album\",children:[\"By \",albumResults[index].artists[0].name]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"review-user-head\",children:[/*#__PURE__*/_jsx(Link,{to:\"/user/\".concat(review.userId),style:linkStyles,children:/*#__PURE__*/_jsx(\"img\",{src:'https://cdn.discordapp.com/attachments/1098384619591696427/1185775745373573160/UserProfileIcon.png?ex=6590d6b8&is=657e61b8&hm=fcec25082158a3bd53e0e20f38f3a83c8cfdd532bd15eae8de0bcb0b94c6b984&',style:{width:'50px',height:'50px'},className:\"review-profile\",alt:\"User Profile\"})}),/*#__PURE__*/_jsx(Link,{to:\"/user/\".concat(review.userId),style:linkStyles,children:/*#__PURE__*/_jsx(\"p\",{className:\"review-author\",children:review.username})}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"score-text\",children:review.score}),/*#__PURE__*/_jsx(\"div\",{className:\"score-bar\",children:/*#__PURE__*/_jsx(\"div\",{style:{background:colorScale(review.score),width:\"\".concat(review.score,\"%\"),height:'100%'}})})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"review-text\",children:review.reviewbody.trim()!==''?/*#__PURE__*/_jsx(\"p\",{children:review.reviewbody}):/*#__PURE__*/_jsx(\"p\",{children:\"No review given\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"review-date\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Reviewed on: \",new Date(review.createdAt).toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'})]})})]})]})]},index);}),/*#__PURE__*/_jsx(\"hr\",{className:\"separator\"})]});}export default UserReviewResults;","map":{"version":3,"names":["React","useState","useEffect","scaleSequential","interpolateRgb","Link","Loading","jsx","_jsx","jsxs","_jsxs","linkStyles","textDecoration","color","CLIENT_ID","CLIENT_SECRET","UserReviewResults","_ref","reviews","colorScale","domain","albumResults","setAlbumResults","loading","setLoading","fetchAlbumInfo","albumId","token","fetchAccessToken","albumEndpoint","concat","albumInfo","performSearch","error","console","fetchAlbumData","review","prevAlbumResults","fetchData","authParameters","method","headers","body","data","fetch","then","result","json","access_token","spotifyEndpoint","searchParameters","response","ok","className","children","map","index","_albumResults$index","_albumResults$index$i","to","style","src","images","url","width","height","alt","name","artists","id","userId","username","score","background","reviewbody","trim","Date","createdAt","toLocaleDateString","year","month","day"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/general/user-review-results.jsx"],"sourcesContent":["// import modules and components\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { scaleSequential } from 'd3-scale';\r\nimport { interpolateRgb } from 'd3-interpolate';\r\nimport { Link  } from 'react-router-dom';\r\nimport Loading from \"./loading.jsx\"\r\n\r\n// Styles for links\r\nconst linkStyles = {\r\n  textDecoration: 'none',\r\n  color: 'inherit', \r\n};\r\n\r\n// Spotify Client Credentials\r\nconst CLIENT_ID = \"5d8c84c59ac8435e91aa1c9d5d2e9706\";\r\nconst CLIENT_SECRET = \"93799cce40b641bb951a9b6966e3f2c0\";\r\n\r\nfunction UserReviewResults({ reviews }) {\r\n  // Create a color scale from green to red\r\n  const colorScale = scaleSequential(interpolateRgb('rgb(189, 16, 16)', 'rgb(87, 163, 36)')).domain([0, 100]);\r\n\r\n  // State variables for album results and loading state\r\n  const [albumResults, setAlbumResults] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch album information based on the review's albumId\r\n  async function fetchAlbumInfo(albumId) {\r\n    try {\r\n      const token = await fetchAccessToken(); // Fetch access token\r\n      const albumEndpoint = `https://api.spotify.com/v1/albums/${albumId}`;\r\n      const albumInfo = await performSearch(token, albumEndpoint); // Fetch album information\r\n      return albumInfo;\r\n    } catch (error) {\r\n      console.error('Error fetching album info:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Fetch data for all reviews\r\n  const fetchAlbumData = async () => {\r\n    try {\r\n      for (const review of reviews) {\r\n        const albumInfo = await fetchAlbumInfo(review.albumId);\r\n        setAlbumResults(prevAlbumResults => [...prevAlbumResults, albumInfo]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching album data:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Use effect to fetch album data on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetchAlbumData();\r\n      } catch (error) {\r\n        console.error('Error fetching album data:', error);\r\n      }\r\n    };\r\n    fetchData(); // Fetch data on component mount\r\n  }, []); // Empty dependency array ensures this runs only once\r\n\r\n  // Function to fetch Spotify access token\r\n  async function fetchAccessToken() {\r\n    // Request parameters for getting the token\r\n    const authParameters = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\r\n    }\r\n    // Fetch the token and return it\r\n    const data = await fetch('https://accounts.spotify.com/api/token', authParameters)\r\n      .then(result => result.json());\r\n    return data.access_token;\r\n  }\r\n\r\n  // Function to perform a search at a given endpoint via Spotify API\r\n  async function performSearch(token, spotifyEndpoint) {\r\n    const searchParameters = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    }\r\n    try {\r\n      const response = await fetch(spotifyEndpoint, searchParameters);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching:', error);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // Rendering the reviews and album information\r\n  return (\r\n    <div className=\"reviews-container\">\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        reviews.map((review, index) => (\r\n          <div key={index} className=\"review-row\">\r\n            {/* Display individual review content */}\r\n            <hr className=\"separator\" />\r\n            <div className=\"review-columns\">\r\n              <div className=\"album-column\">\r\n                <Link to={`/album/${review.albumId}`} style={linkStyles}>\r\n                  <img\r\n                    src={albumResults[index]?.images[0]?.url}\r\n                    style={{ width: '200px', height: '200px' }}\r\n                    alt={`Album ${index}`}\r\n                  />\r\n                </Link>\r\n              </div>\r\n              <div className=\"review-details\">\r\n                <div className=\"user-score review-text\">\r\n                  {/* Header with album and user information */}\r\n                  <div className=\"review-head\">\r\n                    {/* Link to album details */}\r\n                    <div className=\"review-album-head\">\r\n                      <Link to={`/album/${review.albumId}`} style={linkStyles}>\r\n                        <p className=\"review-author-alt\">{albumResults[index].name}</p>\r\n                      </Link>\r\n                      <Link to={`/artist/${albumResults[index].artists[0].id}`} style={linkStyles}>\r\n                        <p className=\"review-author-album\">By {albumResults[index].artists[0].name}</p>\r\n                      </Link>\r\n                    </div>\r\n                    {/* Link to user profile and user information */}\r\n                    <div className=\"review-user-head\">\r\n                      <Link to={`/user/${review.userId}`} style={linkStyles}>\r\n                        <img\r\n                          src={'https://cdn.discordapp.com/attachments/1098384619591696427/1185775745373573160/UserProfileIcon.png?ex=6590d6b8&is=657e61b8&hm=fcec25082158a3bd53e0e20f38f3a83c8cfdd532bd15eae8de0bcb0b94c6b984&'}\r\n                          style={{ width: '50px', height: '50px' }}\r\n                          className=\"review-profile\"\r\n                          alt=\"User Profile\"\r\n                        />\r\n                      </Link>\r\n                      <Link to={`/user/${review.userId}`} style={linkStyles}>\r\n                        <p className=\"review-author\">{review.username}</p>\r\n                      </Link>\r\n                      {/* Review score and colored bar */}\r\n                      <div className=\"score-container\">\r\n                        <p className=\"score-text\">{review.score}</p>\r\n                        <div className=\"score-bar\">\r\n                          <div\r\n                            style={{\r\n                              background: colorScale(review.score),\r\n                              width: `${review.score}%`,\r\n                              height: '100%',\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Review body */}\r\n                <div className=\"review-text\">\r\n                  {review.reviewbody.trim() !== '' ? (\r\n                    <p>{review.reviewbody}</p>\r\n                  ) : (\r\n                    <p>No review given</p>\r\n                  )}\r\n                </div>\r\n                {/* Review date */}\r\n                <div className=\"review-date\">\r\n                  <p>\r\n                    Reviewed on: {new Date(review.createdAt).toLocaleDateString('en-US', {\r\n                      year: 'numeric',\r\n                      month: 'long',\r\n                      day: 'numeric'\r\n                    })}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n      <hr className=\"separator\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserReviewResults;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}