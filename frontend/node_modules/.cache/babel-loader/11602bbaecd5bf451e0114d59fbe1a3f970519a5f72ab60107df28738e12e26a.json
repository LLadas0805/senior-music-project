{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageBase = void 0;\nvar ImageBase = /** @class */function () {\n  function ImageBase() {}\n  ImageBase.prototype.scaleDown = function (opts) {\n    var width = this.getWidth();\n    var height = this.getHeight();\n    var ratio = 1;\n    if (opts.maxDimension > 0) {\n      var maxSide = Math.max(width, height);\n      if (maxSide > opts.maxDimension) ratio = opts.maxDimension / maxSide;\n    } else {\n      ratio = 1 / opts.quality;\n    }\n    if (ratio < 1) this.resize(width * ratio, height * ratio, ratio);\n  };\n  ImageBase.prototype.applyFilter = function (filter) {\n    var imageData = this.getImageData();\n    if (typeof filter === 'function') {\n      var pixels = imageData.data;\n      var n = pixels.length / 4;\n      var offset = void 0,\n        r = void 0,\n        g = void 0,\n        b = void 0,\n        a = void 0;\n      for (var i = 0; i < n; i++) {\n        offset = i * 4;\n        r = pixels[offset + 0];\n        g = pixels[offset + 1];\n        b = pixels[offset + 2];\n        a = pixels[offset + 3];\n        // Mark ignored color\n        if (!filter(r, g, b, a)) pixels[offset + 3] = 0;\n      }\n    }\n    return Promise.resolve(imageData);\n  };\n  return ImageBase;\n}();\nexports.ImageBase = ImageBase;","map":{"version":3,"names":["ImageBase","prototype","scaleDown","opts","width","getWidth","height","getHeight","ratio","maxDimension","maxSide","Math","max","quality","resize","applyFilter","filter","imageData","getImageData","pixels","data","n","length","offset","r","g","b","a","i","Promise","resolve","exports"],"sources":["C:\\Users\\luker\\SeniorProject\\senior-music-project\\frontend\\node_modules\\node-vibrant\\src\\image\\base.ts"],"sourcesContent":["import { Filter, Image, Options, ImageData, ImageSource } from '../typing'\n\nexport abstract class ImageBase implements Image {\n  abstract load(image: ImageSource): Promise<ImageBase>\n  abstract clear(): void\n  abstract update(imageData: ImageData): void\n  abstract getWidth(): number\n  abstract getHeight(): number\n  abstract resize(targetWidth: number, targetHeight: number, ratio: number): void\n  abstract getPixelCount(): number\n  abstract getImageData(): ImageData\n  abstract remove(): void\n\n  scaleDown (opts: Options): void {\n    let width: number = this.getWidth()\n    let height: number = this.getHeight()\n\n    let ratio: number = 1\n\n    if (opts.maxDimension > 0) {\n      let maxSide: number = Math.max(width, height)\n      if (maxSide > opts.maxDimension) ratio = opts.maxDimension / maxSide\n    } else {\n      ratio = 1 / opts.quality\n    }\n\n    if (ratio < 1) this.resize(width * ratio, height * ratio, ratio)\n  }\n\n  applyFilter (filter: Filter): Promise<ImageData> {\n    let imageData = this.getImageData()\n\n    if (typeof filter === 'function') {\n      let pixels = imageData.data\n      let n = pixels.length / 4\n      let offset, r, g, b, a\n      for (let i = 0; i < n; i++) {\n        offset = i * 4\n        r = pixels[offset + 0]\n        g = pixels[offset + 1]\n        b = pixels[offset + 2]\n        a = pixels[offset + 3]\n        // Mark ignored color\n        if (!filter(r, g, b, a)) pixels[offset + 3] = 0\n      }\n    }\n\n    return Promise.resolve(imageData)\n  }\n}\n"],"mappings":";;;;;;AAEA,IAAAA,SAAA;EAAA,SAAAA,UAAA,GA+CA;EApCEA,SAAA,CAAAC,SAAA,CAAAC,SAAS,GAAT,UAAWC,IAAa;IACtB,IAAIC,KAAK,GAAW,IAAI,CAACC,QAAQ,EAAE;IACnC,IAAIC,MAAM,GAAW,IAAI,CAACC,SAAS,EAAE;IAErC,IAAIC,KAAK,GAAW,CAAC;IAErB,IAAIL,IAAI,CAACM,YAAY,GAAG,CAAC,EAAE;MACzB,IAAIC,OAAO,GAAWC,IAAI,CAACC,GAAG,CAACR,KAAK,EAAEE,MAAM,CAAC;MAC7C,IAAII,OAAO,GAAGP,IAAI,CAACM,YAAY,EAAED,KAAK,GAAGL,IAAI,CAACM,YAAY,GAAGC,OAAO;KACrE,MAAM;MACLF,KAAK,GAAG,CAAC,GAAGL,IAAI,CAACU,OAAO;;IAG1B,IAAIL,KAAK,GAAG,CAAC,EAAE,IAAI,CAACM,MAAM,CAACV,KAAK,GAAGI,KAAK,EAAEF,MAAM,GAAGE,KAAK,EAAEA,KAAK,CAAC;EAClE,CAAC;EAEDR,SAAA,CAAAC,SAAA,CAAAc,WAAW,GAAX,UAAaC,MAAc;IACzB,IAAIC,SAAS,GAAG,IAAI,CAACC,YAAY,EAAE;IAEnC,IAAI,OAAOF,MAAM,KAAK,UAAU,EAAE;MAChC,IAAIG,MAAM,GAAGF,SAAS,CAACG,IAAI;MAC3B,IAAIC,CAAC,GAAGF,MAAM,CAACG,MAAM,GAAG,CAAC;MACzB,IAAIC,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEC,CAAC;QAAEC,CAAC;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,EAAEO,CAAC,EAAE,EAAE;QAC1BL,MAAM,GAAGK,CAAC,GAAG,CAAC;QACdJ,CAAC,GAAGL,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;QACtBE,CAAC,GAAGN,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;QACtBG,CAAC,GAAGP,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;QACtBI,CAAC,GAAGR,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;QACtB;QACA,IAAI,CAACP,MAAM,CAACQ,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,EAAER,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;;;IAInD,OAAOM,OAAO,CAACC,OAAO,CAACb,SAAS,CAAC;EACnC,CAAC;EACH,OAAAjB,SAAC;AAAD,CAAC,CA/CD;AAAsB+B,OAAA,CAAA/B,SAAA,GAAAA,SAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}