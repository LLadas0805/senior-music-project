{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{useParams,Link}from'react-router-dom';import{Container}from\"react-bootstrap\";import UserIcon from'../Assets/Icons/UserIcon.png';import'./profile.css';import'./home.css';import{ColorExtractor}from'react-color-extractor';import chroma from'chroma-js';import CustomCardResult from\"./CustomCardResult.jsx\";import PlaylistTracklist from\"./PlaylistTracklist.jsx\";import Genres from\"./genres.json\";import GenreIcon from'../Assets/Icons/GenreIcon.png';import Loading from\"./loading.jsx\";import textFit from'textfit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CLIENT_ID=\"5d8c84c59ac8435e91aa1c9d5d2e9706\";const CLIENT_SECRET=\"93799cce40b641bb951a9b6966e3f2c0\";function GenrePage(){const[genreResults,setGenreResults]=useState({});const[accessToken,setAccessToken]=useState(\"\");const{genreId}=useParams();// Get the albumId from the URL\nconst spotifyEndpoints=\"https://api.spotify.com/v1/recommendations?seed_genres=\".concat(genreId);const[loading,setLoading]=useState(true);const[extractedColors,setExtractedColors]=useState([]);const[genreTracks,setGenreTracks]=useState([]);const[gradientString,setGradientString]=useState('');const[bodyGradient,setBodyGradient]=useState('');const[activeTab,setActiveTab]=useState('Overview');// Function to handle tab click and set the active tab\nconst handleTabClick=tabName=>{setActiveTab(tabName);};const handleGetColors=colors=>{// Store the extracted colors in state\nsetExtractedColors(colors[2]);const startColor=colors[2];const darkerColor=darkenColor(startColor,0.5);// Darken the color \nconst gradient=\"linear-gradient(to bottom, \".concat(startColor,\", \").concat(darkerColor,\")\");setGradientString(gradient);const bodyDark=darkenColor(startColor,0.6);const bodyGradient=\"linear-gradient(to bottom, \".concat(bodyDark,\" , #201d24,#201d24, #201d24 )\");setBodyGradient(bodyGradient);};const darkenColor=(color,amount)=>{// Remove the \"#\" symbol from the color string and split it into RGB components\nconst[r,g,b]=color.substring(1).match(/.{2}/g).map(value=>parseInt(value,16));// Calculate a darker shade by reducing RGB values\nconst darkerR=Math.round(r*(1-amount));const darkerG=Math.round(g*(1-amount));const darkerB=Math.round(b*(1-amount));// Construct a new color string in hexadecimal format\nreturn\"#\".concat(darkerR.toString(16).padStart(2,'0')).concat(darkerG.toString(16).padStart(2,'0')).concat(darkerB.toString(16).padStart(2,'0'));};useEffect(()=>{async function fetchData(){// Fetch access token once during component initialization\nconst token=await fetchAccessToken();setAccessToken(token);// Fetch album data\nconst genreData=await performSearch(token,spotifyEndpoints);setGenreResults(genreData);console.log(genreData);setGenreTracks(genreData.tracks);console.log(genreData.tracks.album);setLoading(false);// Set loading to false when data is loaded\n}fetchData();textFit(document.getElementsByClassName('profile-name'));},[genreId]);// Make sure to update the data when albumId changes\nasync function fetchAccessToken(){const authParameters={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:'grant_type=client_credentials&client_id='+CLIENT_ID+'&client_secret='+CLIENT_SECRET};const data=await fetch('https://accounts.spotify.com/api/token',authParameters).then(result=>result.json());return data.access_token;}async function performSearch(token){let spotifyEndpoint=arguments.length>1&&arguments[1]!==undefined?arguments[1]:spotifyEndpoints;const searchParameters={method:'GET',headers:{'Content-Type':'application/json','Authorization':'Bearer '+token}};try{const response=await fetch(spotifyEndpoint,searchParameters);if(response.ok){return await response.json();}console.log(response);}catch(error){console.error('Error searching:',error);}return{};}const linkStyles={textDecoration:'none',// Remove underline\ncolor:'inherit'// Inherit the color from the parent\n};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"page-body\",children:loading?/*#__PURE__*/_jsx(Loading,{}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ColorExtractor,{src:GenreIcon,getColors:handleGetColors}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-head\",style:{background:gradientString},children:[/*#__PURE__*/_jsx(\"div\",{className:\"column-left\",children:/*#__PURE__*/_jsx(\"div\",{className:\"artist-image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:GenreIcon,className:\"card-image profile-image mb-3\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"column-right\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-name\",id:\"profile-name\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"profile-caption \",id:\"profile-caption\",children:genreId.charAt(0).toUpperCase()+genreId.slice(1)})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"caption  type-caption \",children:\"Genre\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"genre-list\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"artist-link\"})})})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-body\",style:{background:bodyGradient},children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-body-expand\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"top-songs top-tabs pb-3 pt-3\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"top-tab caption profile-subcaption pb-3 \".concat(activeTab==='Overview'?'active-profile':''),onClick:()=>handleTabClick('Overview'),children:\"Overview\"})}),activeTab==='Overview'&&/*#__PURE__*/ // Content related to Overview tab\n_jsxs(\"div\",{className:\"content-overview\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"caption type-caption\",children:[\"Recommended music for \",genreId.charAt(0).toUpperCase()+genreId.slice(1)]})}),/*#__PURE__*/_jsx(CustomCardResult,{items:genreTracks,subtitleType:\"album\",singleRow:false})]})]})})]})})});}export default GenrePage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Link","Container","UserIcon","ColorExtractor","chroma","CustomCardResult","PlaylistTracklist","Genres","GenreIcon","Loading","textFit","jsx","_jsx","jsxs","_jsxs","CLIENT_ID","CLIENT_SECRET","GenrePage","genreResults","setGenreResults","accessToken","setAccessToken","genreId","spotifyEndpoints","concat","loading","setLoading","extractedColors","setExtractedColors","genreTracks","setGenreTracks","gradientString","setGradientString","bodyGradient","setBodyGradient","activeTab","setActiveTab","handleTabClick","tabName","handleGetColors","colors","startColor","darkerColor","darkenColor","gradient","bodyDark","color","amount","r","g","b","substring","match","map","value","parseInt","darkerR","Math","round","darkerG","darkerB","toString","padStart","fetchData","token","fetchAccessToken","genreData","performSearch","console","log","tracks","album","document","getElementsByClassName","authParameters","method","headers","body","data","fetch","then","result","json","access_token","spotifyEndpoint","arguments","length","undefined","searchParameters","response","ok","error","linkStyles","textDecoration","children","className","src","getColors","style","background","id","charAt","toUpperCase","slice","onClick","items","subtitleType","singleRow"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/home-page/genre-page.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef  } from \"react\";\r\nimport { useParams, Link  } from 'react-router-dom';\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport UserIcon from '../Assets/Icons/UserIcon.png';\r\nimport './profile.css'\r\nimport './home.css'\r\nimport { ColorExtractor  } from 'react-color-extractor';\r\nimport chroma from 'chroma-js';\r\nimport CustomCardResult from \"./CustomCardResult.jsx\";\r\nimport PlaylistTracklist from \"./PlaylistTracklist.jsx\"\r\nimport Genres from \"./genres.json\";\r\nimport GenreIcon from '../Assets/Icons/GenreIcon.png'\r\nimport Loading from \"./loading.jsx\"\r\n\r\n\r\nimport textFit from 'textfit';\r\n\r\n\r\nconst CLIENT_ID = \"5d8c84c59ac8435e91aa1c9d5d2e9706\";\r\nconst CLIENT_SECRET = \"93799cce40b641bb951a9b6966e3f2c0\";\r\n\r\nfunction GenrePage() {\r\n\r\n\r\n    const [genreResults, setGenreResults] = useState({});\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n    const { genreId } = useParams(); // Get the albumId from the URL\r\n    const spotifyEndpoints = `https://api.spotify.com/v1/recommendations?seed_genres=${genreId}`;\r\n    const [loading, setLoading] = useState(true);\r\n    const [extractedColors, setExtractedColors] = useState([]);\r\n    const [genreTracks, setGenreTracks] = useState([])\r\n  \r\n\r\n    const [gradientString, setGradientString] = useState('');\r\n    const [bodyGradient, setBodyGradient] = useState('');\r\n    const [activeTab, setActiveTab] = useState('Overview');\r\n\r\n    // Function to handle tab click and set the active tab\r\n    const handleTabClick = (tabName) => {\r\n        setActiveTab(tabName);\r\n    };\r\n\r\n    const handleGetColors = (colors) => {\r\n        // Store the extracted colors in state\r\n        setExtractedColors(colors[2]);\r\n        const startColor = colors[2];\r\n        const darkerColor = darkenColor(startColor, 0.5); // Darken the color \r\n        const gradient = `linear-gradient(to bottom, ${startColor}, ${darkerColor})`;\r\n        setGradientString(gradient);\r\n        const bodyDark = darkenColor(startColor, 0.6);\r\n        const bodyGradient = `linear-gradient(to bottom, ${bodyDark} , #201d24,#201d24, #201d24 )`\r\n        setBodyGradient(bodyGradient)\r\n    };\r\n\r\n    const darkenColor = (color, amount) => {\r\n        // Remove the \"#\" symbol from the color string and split it into RGB components\r\n        const [r, g, b] = color.substring(1).match(/.{2}/g).map((value) => parseInt(value, 16));\r\n    \r\n        // Calculate a darker shade by reducing RGB values\r\n        const darkerR = Math.round(r * (1 - amount));\r\n        const darkerG = Math.round(g * (1 - amount));\r\n        const darkerB = Math.round(b * (1 - amount));\r\n    \r\n        // Construct a new color string in hexadecimal format\r\n        return `#${darkerR.toString(16).padStart(2, '0')}${darkerG.toString(16).padStart(2, '0')}${darkerB.toString(16).padStart(2, '0')}`;\r\n      };\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            // Fetch access token once during component initialization\r\n            const token = await fetchAccessToken();\r\n            setAccessToken(token);\r\n           \r\n            // Fetch album data\r\n\r\n            const genreData = await performSearch(token, spotifyEndpoints);\r\n            setGenreResults(genreData);\r\n            console.log(genreData);\r\n\r\n            \r\n            setGenreTracks(genreData.tracks)\r\n            console.log(genreData.tracks.album);\r\n\r\n\r\n\r\n    \r\n\r\n            setLoading(false); // Set loading to false when data is loaded\r\n        }\r\n\r\n        fetchData();\r\n        textFit(document.getElementsByClassName('profile-name'));\r\n         \r\n       \r\n       \r\n        \r\n\r\n    }, [genreId]); // Make sure to update the data when albumId changes\r\n\r\n   \r\n\r\n \r\n      \r\n    \r\n    \r\n    \r\n\r\n   \r\n\r\n   \r\n\r\n    async function fetchAccessToken() {\r\n        const authParameters = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\r\n        }\r\n        const data = await fetch('https://accounts.spotify.com/api/token', authParameters)\r\n            .then(result => result.json());\r\n        return data.access_token;\r\n    }\r\n\r\n    async function performSearch(token, spotifyEndpoint = spotifyEndpoints) {\r\n        const searchParameters = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(spotifyEndpoint, searchParameters);\r\n            if (response.ok) {\r\n                return await response.json();\r\n                \r\n            }\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.error('Error searching:', error);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    const linkStyles = {\r\n        textDecoration: 'none', // Remove underline\r\n        color: 'inherit', // Inherit the color from the parent\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-body\">\r\n                {loading ? (\r\n                    <Loading/>\r\n                ) : (\r\n                    <div >\r\n                        <ColorExtractor\r\n                            src={GenreIcon}\r\n                            getColors={handleGetColors}\r\n                        />\r\n                        <div className=\"profile-head\" style={{ background: gradientString }}>\r\n                            <div className=\"column-left\">\r\n                                <div className=\"artist-image-container\">\r\n                                    <img src={GenreIcon} className=\"card-image profile-image mb-3\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"column-right\">\r\n                                <div className = \"profile-name\" id=\"profile-name\" >\r\n                                    <h1 className=\"profile-caption \" id = \"profile-caption\" >\r\n                                        {genreId.charAt(0).toUpperCase() + genreId.slice(1)} \r\n                                    </h1>\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className=\"caption  type-caption \">Genre</h1>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div>\r\n                                        \r\n                                        <div className=\"genre-list\">\r\n                                       \r\n                                                <h1 className = \"artist-link\">\r\n                                                    \r\n                                                </h1>\r\n                                       \r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        <div className = \"profile-body\" style ={{background: bodyGradient}}>\r\n                       \r\n                            <div className = \"profile-body-expand\">\r\n\r\n                                <div className = \"top-songs top-tabs pb-3 pt-3\">\r\n                                    <h1 className={`top-tab caption profile-subcaption pb-3 ${activeTab === 'Overview' ? 'active-profile' : ''}`} \r\n                                        onClick={() => handleTabClick('Overview')}>Overview</h1>\r\n                                    \r\n       \r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                     \r\n\r\n\r\n\r\n                                {activeTab === 'Overview' && (\r\n                                    // Content related to Overview tab\r\n                                    <div className=\"content-overview\">\r\n                                        <div className=\"caption-div\">\r\n                                            <p className=\"caption type-caption\">Recommended music for {genreId.charAt(0).toUpperCase() + genreId.slice(1)}</p>\r\n                                        </div>\r\n                                        <CustomCardResult items={genreTracks} subtitleType=\"album\" singleRow = {false}/>\r\n\r\n                                    </div>\r\n                                )}\r\n\r\n                               \r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                       \r\n                    \r\n\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenrePage;\r\n\r\n\r\n\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}