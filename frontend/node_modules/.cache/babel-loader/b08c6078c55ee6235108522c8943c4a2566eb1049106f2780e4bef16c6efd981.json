{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useLocation}from\"react-router-dom\";import'bootstrap/dist/css/bootstrap.min.css';import CustomCardResult from\"./CustomCardResult.jsx\";import Loading from\"./loading.jsx\";import'./home.css';import axios from\"axios\";import Genres from\"./genres.json\";import PitchforkArticles from'./articles.jsx';// Adjust the path accordingly\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CLIENT_ID=\"5d8c84c59ac8435e91aa1c9d5d2e9706\";const CLIENT_SECRET=\"93799cce40b641bb951a9b6966e3f2c0\";function Home(){const[userData,setUserData]=useState(null);const[accessToken,setAccessToken]=useState(\"\");const[newReleaseResults,setNewReleaseResults]=useState({});const[loading,setLoading]=useState(true);const[genres,setGenres]=useState([]);const spotifyEndpoints='https://api.spotify.com/v1/browse/new-releases?offset=0';function shuffleArray(array){for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]];}return array;}useEffect(()=>{// Make an API call to fetch user data from the backend\naxios.get(\"http://localhost:3000/session\").then(response=>{// Handle successful response\nsetUserData(response.data);// Assuming the response contains user data\n}).catch(error=>{// Handle error\nconsole.error(\"Error fetching user data:\",error);});async function fetchData(){// Fetch access token once during component initialization\nconst token=await fetchAccessToken();setAccessToken(token);// Fetch album data\nconst newReleases=await performSearch(token,spotifyEndpoints);setNewReleaseResults(newReleases);setLoading(false);// Set loading to false when data is loaded\n}setGenres(shuffleArray(Genres.genres).slice(0,6));fetchData();},[]);async function fetchAccessToken(){const authParameters={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:'grant_type=client_credentials&client_id='+CLIENT_ID+'&client_secret='+CLIENT_SECRET};const data=await fetch('https://accounts.spotify.com/api/token',authParameters).then(result=>result.json());return data.access_token;}async function performSearch(token){let spotifyEndpoint=arguments.length>1&&arguments[1]!==undefined?arguments[1]:spotifyEndpoints;const searchParameters={method:'GET',headers:{'Content-Type':'application/json','Authorization':'Bearer '+token}};try{const response=await fetch(spotifyEndpoint,searchParameters);if(response.ok){return await response.json();}console.log(response);}catch(error){console.error('Error searching:',error);}return{};}return/*#__PURE__*/_jsx(\"div\",{className:\"background\",children:/*#__PURE__*/_jsx(\"div\",{className:\"homepage\",style:{color:'white'},children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(Loading,{})}):/*#__PURE__*/_jsxs(\"div\",{className:\"search-results\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:userData?/*#__PURE__*/_jsxs(\"p\",{className:\"caption type-caption\",children:[\"Welcome \",userData.username]}):/*#__PURE__*/_jsx(\"p\",{className:\"caption type-caption\",children:\"Hello, welcome to Harmony!\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption type-caption\",children:\"New releases\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:newReleaseResults.albums.items.slice(0,6),subtitleType:\"album\",singleRow:true}),/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption type-caption\",children:\"Explore genres\"})}),/*#__PURE__*/_jsx(CustomCardResult,{items:genres,subtitleType:\"genre\",singleRow:true}),/*#__PURE__*/_jsx(\"div\",{className:\"caption-div\",children:/*#__PURE__*/_jsx(\"p\",{className:\"caption type-caption\",children:\"Browse current events\"})}),/*#__PURE__*/_jsx(PitchforkArticles,{})]})})});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","useLocation","CustomCardResult","Loading","axios","Genres","PitchforkArticles","jsx","_jsx","jsxs","_jsxs","CLIENT_ID","CLIENT_SECRET","Home","userData","setUserData","accessToken","setAccessToken","newReleaseResults","setNewReleaseResults","loading","setLoading","genres","setGenres","spotifyEndpoints","shuffleArray","array","i","length","j","Math","floor","random","get","then","response","data","catch","error","console","fetchData","token","fetchAccessToken","newReleases","performSearch","slice","authParameters","method","headers","body","fetch","result","json","access_token","spotifyEndpoint","arguments","undefined","searchParameters","ok","log","className","children","style","color","username","items","albums","subtitleType","singleRow"],"sources":["C:/Users/luker/SeniorProject/senior-music-project/frontend/src/Components/home-page/home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomCardResult from \"./CustomCardResult.jsx\";\r\nimport Loading from \"./loading.jsx\"\r\nimport './home.css'\r\nimport axios from \"axios\"\r\nimport Genres from \"./genres.json\";\r\nimport PitchforkArticles from './articles.jsx'; // Adjust the path accordingly\r\n\r\n\r\nconst CLIENT_ID = \"5d8c84c59ac8435e91aa1c9d5d2e9706\";\r\nconst CLIENT_SECRET = \"93799cce40b641bb951a9b6966e3f2c0\";\r\n\r\nfunction Home() {\r\n    const [userData, setUserData] = useState(null);\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n    const [newReleaseResults, setNewReleaseResults] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [genres, setGenres] = useState([]);\r\n\r\n    \r\n    const spotifyEndpoints = 'https://api.spotify.com/v1/browse/new-releases?offset=0';\r\n\r\n    function shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n\r\n    \r\n      \r\n      \r\n     \r\n\r\n\r\n    useEffect(() => {\r\n        // Make an API call to fetch user data from the backend\r\n        axios.get(\"http://localhost:3000/session\")\r\n          .then(response => {\r\n            // Handle successful response\r\n            setUserData(response.data); // Assuming the response contains user data\r\n          })\r\n          .catch(error => {\r\n            // Handle error\r\n            console.error(\"Error fetching user data:\", error);\r\n        });\r\n\r\n        async function fetchData() {\r\n            // Fetch access token once during component initialization\r\n            const token = await fetchAccessToken();\r\n            setAccessToken(token);\r\n           \r\n            // Fetch album data\r\n\r\n            const newReleases = await performSearch(token, spotifyEndpoints);\r\n            setNewReleaseResults(newReleases);\r\n\r\n           \r\n            \r\n\r\n\r\n            \r\n            \r\n\r\n\r\n\r\n            \r\n\r\n            setLoading(false); // Set loading to false when data is loaded\r\n        }\r\n\r\n        setGenres(shuffleArray(Genres.genres).slice(0, 6));\r\n\r\n        fetchData();\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    async function fetchAccessToken() {\r\n        const authParameters = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\r\n        }\r\n        const data = await fetch('https://accounts.spotify.com/api/token', authParameters)\r\n            .then(result => result.json());\r\n        return data.access_token;\r\n    }\r\n\r\n    async function performSearch(token, spotifyEndpoint = spotifyEndpoints) {\r\n        const searchParameters = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(spotifyEndpoint, searchParameters);\r\n            if (response.ok) {\r\n                return await response.json();\r\n                \r\n            }\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.error('Error searching:', error);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"background\">\r\n            <div className=\"homepage\" style={{ color: 'white' }}>\r\n                {loading ? (\r\n                    <div className=\"caption-div\">\r\n                        <Loading/>\r\n                    </div>\r\n                ) : (\r\n                <div className=\"search-results\">\r\n\r\n                    <div className=\"caption-div\">\r\n                    {userData ? (\r\n                        <p className=\"caption type-caption\">Welcome {userData.username}</p>\r\n                        ) : (\r\n                        <p className=\"caption type-caption\">Hello, welcome to Harmony!</p>\r\n                    )}\r\n                    </div>\r\n\r\n                    <div className=\"caption-div\">\r\n                        <p className=\"caption type-caption\">New releases</p>\r\n                    </div>\r\n                    <CustomCardResult items={newReleaseResults.albums.items.slice(0, 6)} subtitleType=\"album\" singleRow = {true}/>\r\n\r\n                    <div className=\"caption-div\">\r\n                        <p className=\"caption type-caption\">Explore genres</p>\r\n                    </div>\r\n                    <CustomCardResult items={genres} subtitleType=\"genre\" singleRow = {true}/>\r\n\r\n                    <div className=\"caption-div\">\r\n                        <p className=\"caption type-caption\">Browse current events</p>\r\n                    </div>\r\n                    <PitchforkArticles />\r\n\r\n                </div>\r\n                )}\r\n        \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}